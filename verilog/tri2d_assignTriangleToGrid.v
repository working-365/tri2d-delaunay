// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tri2d_assignTriangleToGrid (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        triangleIdx,
        face_used_V_address0,
        face_used_V_ce0,
        face_used_V_q0,
        face_edge_V_address0,
        face_edge_V_ce0,
        face_edge_V_q0,
        he_tail_V_address0,
        he_tail_V_ce0,
        he_tail_V_q0,
        he_next_V_address0,
        he_next_V_ce0,
        he_next_V_q0,
        vertex_x_V_address0,
        vertex_x_V_ce0,
        vertex_x_V_q0,
        vertex_x_V_address1,
        vertex_x_V_ce1,
        vertex_x_V_q1,
        vertex_y_V_address0,
        vertex_y_V_ce0,
        vertex_y_V_q0,
        vertex_y_V_address1,
        vertex_y_V_ce1,
        vertex_y_V_q1,
        enhanced_grid_grid_size_x,
        enhanced_grid_x_min_V,
        enhanced_grid_cell_width_V,
        enhanced_grid_grid_size_y,
        enhanced_grid_y_min_V,
        enhanced_grid_cell_height_V,
        enhanced_grid_total_cells,
        enhanced_grid_flat_cells_triangle_count_address0,
        enhanced_grid_flat_cells_triangle_count_ce0,
        enhanced_grid_flat_cells_triangle_count_we0,
        enhanced_grid_flat_cells_triangle_count_d0,
        enhanced_grid_flat_cells_triangle_count_q0,
        enhanced_grid_flat_cells_triangles_V_address0,
        enhanced_grid_flat_cells_triangles_V_ce0,
        enhanced_grid_flat_cells_triangles_V_we0,
        enhanced_grid_flat_cells_triangles_V_d0,
        enhanced_grid_flat_cells_triangles_V_q0
);

parameter    ap_ST_fsm_state1 = 64'd1;
parameter    ap_ST_fsm_state2 = 64'd2;
parameter    ap_ST_fsm_state3 = 64'd4;
parameter    ap_ST_fsm_state4 = 64'd8;
parameter    ap_ST_fsm_state5 = 64'd16;
parameter    ap_ST_fsm_state6 = 64'd32;
parameter    ap_ST_fsm_state7 = 64'd64;
parameter    ap_ST_fsm_state8 = 64'd128;
parameter    ap_ST_fsm_state9 = 64'd256;
parameter    ap_ST_fsm_state10 = 64'd512;
parameter    ap_ST_fsm_state11 = 64'd1024;
parameter    ap_ST_fsm_state12 = 64'd2048;
parameter    ap_ST_fsm_state13 = 64'd4096;
parameter    ap_ST_fsm_state14 = 64'd8192;
parameter    ap_ST_fsm_state15 = 64'd16384;
parameter    ap_ST_fsm_state16 = 64'd32768;
parameter    ap_ST_fsm_state17 = 64'd65536;
parameter    ap_ST_fsm_state18 = 64'd131072;
parameter    ap_ST_fsm_state19 = 64'd262144;
parameter    ap_ST_fsm_state20 = 64'd524288;
parameter    ap_ST_fsm_state21 = 64'd1048576;
parameter    ap_ST_fsm_state22 = 64'd2097152;
parameter    ap_ST_fsm_state23 = 64'd4194304;
parameter    ap_ST_fsm_state24 = 64'd8388608;
parameter    ap_ST_fsm_state25 = 64'd16777216;
parameter    ap_ST_fsm_state26 = 64'd33554432;
parameter    ap_ST_fsm_state27 = 64'd67108864;
parameter    ap_ST_fsm_state28 = 64'd134217728;
parameter    ap_ST_fsm_state29 = 64'd268435456;
parameter    ap_ST_fsm_state30 = 64'd536870912;
parameter    ap_ST_fsm_state31 = 64'd1073741824;
parameter    ap_ST_fsm_state32 = 64'd2147483648;
parameter    ap_ST_fsm_state33 = 64'd4294967296;
parameter    ap_ST_fsm_state34 = 64'd8589934592;
parameter    ap_ST_fsm_state35 = 64'd17179869184;
parameter    ap_ST_fsm_state36 = 64'd34359738368;
parameter    ap_ST_fsm_state37 = 64'd68719476736;
parameter    ap_ST_fsm_state38 = 64'd137438953472;
parameter    ap_ST_fsm_state39 = 64'd274877906944;
parameter    ap_ST_fsm_state40 = 64'd549755813888;
parameter    ap_ST_fsm_state41 = 64'd1099511627776;
parameter    ap_ST_fsm_state42 = 64'd2199023255552;
parameter    ap_ST_fsm_state43 = 64'd4398046511104;
parameter    ap_ST_fsm_state44 = 64'd8796093022208;
parameter    ap_ST_fsm_state45 = 64'd17592186044416;
parameter    ap_ST_fsm_state46 = 64'd35184372088832;
parameter    ap_ST_fsm_state47 = 64'd70368744177664;
parameter    ap_ST_fsm_state48 = 64'd140737488355328;
parameter    ap_ST_fsm_state49 = 64'd281474976710656;
parameter    ap_ST_fsm_state50 = 64'd562949953421312;
parameter    ap_ST_fsm_state51 = 64'd1125899906842624;
parameter    ap_ST_fsm_state52 = 64'd2251799813685248;
parameter    ap_ST_fsm_state53 = 64'd4503599627370496;
parameter    ap_ST_fsm_state54 = 64'd9007199254740992;
parameter    ap_ST_fsm_state55 = 64'd18014398509481984;
parameter    ap_ST_fsm_state56 = 64'd36028797018963968;
parameter    ap_ST_fsm_state57 = 64'd72057594037927936;
parameter    ap_ST_fsm_state58 = 64'd144115188075855872;
parameter    ap_ST_fsm_state59 = 64'd288230376151711744;
parameter    ap_ST_fsm_state60 = 64'd576460752303423488;
parameter    ap_ST_fsm_state61 = 64'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 64'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 64'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 64'd9223372036854775808;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [13:0] triangleIdx;
output  [13:0] face_used_V_address0;
output   face_used_V_ce0;
input  [0:0] face_used_V_q0;
output  [13:0] face_edge_V_address0;
output   face_edge_V_ce0;
input  [14:0] face_edge_V_q0;
output  [15:0] he_tail_V_address0;
output   he_tail_V_ce0;
input  [12:0] he_tail_V_q0;
output  [15:0] he_next_V_address0;
output   he_next_V_ce0;
input  [14:0] he_next_V_q0;
output  [12:0] vertex_x_V_address0;
output   vertex_x_V_ce0;
input  [23:0] vertex_x_V_q0;
output  [12:0] vertex_x_V_address1;
output   vertex_x_V_ce1;
input  [23:0] vertex_x_V_q1;
output  [12:0] vertex_y_V_address0;
output   vertex_y_V_ce0;
input  [23:0] vertex_y_V_q0;
output  [12:0] vertex_y_V_address1;
output   vertex_y_V_ce1;
input  [23:0] vertex_y_V_q1;
input  [6:0] enhanced_grid_grid_size_x;
input  [23:0] enhanced_grid_x_min_V;
input  [23:0] enhanced_grid_cell_width_V;
input  [6:0] enhanced_grid_grid_size_y;
input  [23:0] enhanced_grid_y_min_V;
input  [23:0] enhanced_grid_cell_height_V;
input  [12:0] enhanced_grid_total_cells;
output  [11:0] enhanced_grid_flat_cells_triangle_count_address0;
output   enhanced_grid_flat_cells_triangle_count_ce0;
output   enhanced_grid_flat_cells_triangle_count_we0;
output  [31:0] enhanced_grid_flat_cells_triangle_count_d0;
input  [31:0] enhanced_grid_flat_cells_triangle_count_q0;
output  [16:0] enhanced_grid_flat_cells_triangles_V_address0;
output   enhanced_grid_flat_cells_triangles_V_ce0;
output   enhanced_grid_flat_cells_triangles_V_we0;
output  [13:0] enhanced_grid_flat_cells_triangles_V_d0;
input  [13:0] enhanced_grid_flat_cells_triangles_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] face_used_V_address0;
reg face_used_V_ce0;
reg face_edge_V_ce0;
reg[15:0] he_tail_V_address0;
reg he_tail_V_ce0;
reg[15:0] he_next_V_address0;
reg he_next_V_ce0;
reg[12:0] vertex_x_V_address0;
reg vertex_x_V_ce0;
reg vertex_x_V_ce1;
reg[12:0] vertex_y_V_address0;
reg vertex_y_V_ce0;
reg vertex_y_V_ce1;
reg enhanced_grid_flat_cells_triangle_count_ce0;
reg enhanced_grid_flat_cells_triangle_count_we0;
reg[16:0] enhanced_grid_flat_cells_triangles_V_address0;
reg enhanced_grid_flat_cells_triangles_V_ce0;
reg enhanced_grid_flat_cells_triangles_V_we0;

(* fsm_encoding = "none" *) reg   [63:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] zext_ln541_fu_286_p1;
reg   [63:0] zext_ln541_reg_969;
reg   [0:0] face_used_V_load_reg_979;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg   [12:0] pointIdx_V_reg_998;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln1027_fu_308_p2;
reg   [0:0] icmp_ln1027_reg_1019;
wire   [0:0] grp_fu_280_p2;
reg   [0:0] icmp_ln1027_7_reg_1035;
reg   [0:0] icmp_ln1027_8_reg_1051;
wire    ap_CS_fsm_state6;
wire   [24:0] ret_V_74_fu_366_p2;
reg   [24:0] ret_V_74_reg_1067;
wire   [24:0] ret_V_75_fu_380_p2;
reg   [24:0] ret_V_75_reg_1072;
wire   [25:0] ret_V_fu_407_p2;
reg   [25:0] ret_V_reg_1077;
wire    ap_CS_fsm_state7;
reg   [0:0] tmp_reg_1082;
wire   [92:0] mul_ln1303_1_fu_446_p2;
reg   [92:0] mul_ln1303_1_reg_1088;
reg   [0:0] tmp_96_reg_1093;
reg   [23:0] tmp_98_reg_1099;
wire   [24:0] ret_V_66_fu_578_p2;
reg   [24:0] ret_V_66_reg_1105;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state56;
wire   [6:0] grid_x_fu_868_p3;
reg   [6:0] grid_x_reg_1143;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire   [0:0] icmp_ln233_fu_887_p2;
reg   [0:0] icmp_ln233_reg_1153;
wire    ap_CS_fsm_state59;
reg   [11:0] enhanced_grid_flat_cells_triangle_count_addr_reg_1162;
wire  signed [16:0] grp_fu_950_p2;
reg   [16:0] mul_ln241_reg_1167;
wire    ap_CS_fsm_state62;
wire   [30:0] trunc_ln241_fu_899_p1;
reg   [30:0] trunc_ln241_reg_1172;
wire   [0:0] icmp_ln241_fu_904_p2;
reg   [0:0] icmp_ln241_reg_1177;
wire   [0:0] grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_return;
reg   [0:0] targetBlock_reg_1181;
wire    ap_CS_fsm_state63;
wire    grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_start;
wire    grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_done;
wire    grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_idle;
wire    grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_ready;
wire   [16:0] grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_add_ln249_out;
wire    grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_add_ln249_out_ap_vld;
wire   [16:0] grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_enhanced_grid_flat_cells_triangles_V_address0;
wire    grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_enhanced_grid_flat_cells_triangles_V_ce0;
wire   [13:0] grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_face_used_V_address0;
wire    grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_face_used_V_ce0;
reg    grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_start_reg;
reg   [16:0] add_ln249_loc_fu_84;
wire   [63:0] zext_ln541_54_fu_291_p1;
wire   [63:0] zext_ln541_55_fu_297_p1;
wire   [63:0] zext_ln541_56_fu_303_p1;
wire   [63:0] zext_ln541_57_fu_313_p1;
wire   [63:0] zext_ln541_58_fu_318_p1;
wire   [63:0] zext_ln541_59_fu_352_p1;
wire   [63:0] zext_ln238_fu_892_p1;
wire   [63:0] zext_ln242_fu_919_p1;
wire   [63:0] add_ln249_reload_cast_fu_934_p1;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state61;
wire   [23:0] p1_x_V_fu_331_p3;
wire   [23:0] p2_x_V_fu_338_p3;
wire  signed [24:0] sext_ln813_10_fu_362_p1;
wire  signed [24:0] sext_ln813_fu_358_p1;
wire   [23:0] p1_y_V_fu_324_p3;
wire   [23:0] p2_y_V_fu_345_p3;
wire  signed [24:0] sext_ln813_14_fu_376_p1;
wire  signed [24:0] sext_ln813_13_fu_372_p1;
wire   [23:0] p3_x_V_fu_386_p3;
wire  signed [25:0] sext_ln813_11_fu_400_p1;
wire  signed [25:0] sext_ln813_12_fu_403_p1;
wire   [23:0] p3_y_V_fu_393_p3;
wire  signed [25:0] sext_ln813_15_fu_421_p1;
wire  signed [25:0] sext_ln813_16_fu_424_p1;
wire   [25:0] ret_V_65_fu_428_p2;
wire  signed [45:0] t_15_fu_434_p3;
wire   [47:0] mul_ln1303_1_fu_446_p1;
wire  signed [45:0] t_fu_470_p3;
wire   [47:0] mul_ln1303_fu_481_p1;
wire   [92:0] mul_ln1303_fu_481_p2;
wire   [92:0] sub_ln1303_fu_487_p2;
wire   [23:0] tmp_94_fu_493_p4;
wire   [23:0] tmp_95_fu_503_p4;
wire   [23:0] select_ln1303_fu_513_p3;
wire   [23:0] sub_ln1303_1_fu_520_p2;
wire   [92:0] sub_ln1303_2_fu_533_p2;
wire   [23:0] tmp_97_fu_538_p4;
wire   [23:0] select_ln1303_2_fu_548_p3;
wire   [23:0] sub_ln1303_3_fu_554_p2;
wire   [23:0] centroid_x_V_fu_526_p3;
wire  signed [24:0] sext_ln813_19_fu_566_p1;
wire  signed [24:0] sext_ln813_20_fu_574_p1;
wire   [23:0] centroid_y_V_fu_560_p3;
wire  signed [24:0] sext_ln813_23_fu_584_p1;
wire  signed [24:0] sext_ln813_24_fu_592_p1;
wire   [24:0] ret_V_70_fu_596_p2;
wire   [44:0] grp_fu_618_p0;
wire   [44:0] grp_fu_639_p0;
wire   [7:0] zext_ln145_fu_657_p1;
wire  signed [7:0] add_ln145_fu_661_p2;
wire   [44:0] grp_fu_618_p2;
wire   [24:0] ret_V_71_fu_675_p4;
wire   [19:0] trunc_ln1003_1_fu_697_p1;
wire  signed [25:0] sext_ln987_1_fu_685_p1;
wire   [0:0] icmp_ln1003_1_fu_701_p2;
wire   [25:0] ret_V_72_fu_707_p2;
wire   [0:0] p_Result_132_fu_689_p3;
wire   [25:0] select_ln1002_1_fu_713_p3;
wire   [25:0] ret_V_73_fu_721_p3;
wire  signed [25:0] sext_ln813_21_fu_667_p1;
wire   [0:0] icmp_ln200_2_fu_733_p2;
wire   [24:0] trunc_ln983_1_fu_729_p1;
wire  signed [24:0] sext_ln813_22_fu_671_p1;
wire   [24:0] select_ln224_3_fu_739_p3;
wire   [0:0] icmp_ln224_2_fu_751_p2;
wire   [6:0] trunc_ln224_3_fu_747_p1;
wire   [6:0] grid_y_fu_757_p3;
wire   [7:0] zext_ln143_1_fu_769_p1;
wire  signed [7:0] add_ln143_fu_772_p2;
wire   [44:0] grp_fu_639_p2;
wire   [24:0] ret_V_67_fu_786_p4;
wire   [19:0] trunc_ln1003_fu_808_p1;
wire  signed [25:0] sext_ln987_fu_796_p1;
wire   [0:0] icmp_ln1003_fu_812_p2;
wire   [25:0] ret_V_68_fu_818_p2;
wire   [0:0] p_Result_s_fu_800_p3;
wire   [25:0] select_ln1002_fu_824_p3;
wire   [25:0] ret_V_69_fu_832_p3;
wire  signed [25:0] sext_ln813_17_fu_778_p1;
wire   [0:0] icmp_ln200_fu_844_p2;
wire   [24:0] trunc_ln983_fu_840_p1;
wire  signed [24:0] sext_ln813_18_fu_782_p1;
wire   [24:0] select_ln224_fu_850_p3;
wire   [0:0] icmp_ln224_fu_862_p2;
wire   [6:0] trunc_ln224_fu_858_p1;
wire   [13:0] grp_fu_939_p3;
wire   [13:0] zext_ln233_fu_883_p1;
wire   [16:0] add_ln242_fu_914_p0;
wire   [16:0] trunc_ln242_fu_910_p1;
(* use_dsp48 = "no" *) wire   [16:0] add_ln242_fu_914_p2;
wire   [6:0] grp_fu_939_p0;
wire   [6:0] grp_fu_939_p1;
wire   [6:0] grp_fu_939_p2;
wire   [13:0] grp_fu_950_p0;
wire   [4:0] grp_fu_950_p1;
reg    grp_fu_618_ap_start;
wire    grp_fu_618_ap_done;
reg    grp_fu_639_ap_start;
wire    grp_fu_639_ap_done;
reg   [63:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
reg    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire   [13:0] grp_fu_939_p00;
wire   [13:0] grp_fu_939_p10;
wire   [13:0] grp_fu_939_p20;
wire   [16:0] grp_fu_950_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 64'd1;
#0 grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_start_reg = 1'b0;
end

tri2d_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1 grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_start),
    .ap_done(grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_done),
    .ap_idle(grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_idle),
    .ap_ready(grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_ready),
    .enhanced_grid_flat_cells_triangle_count_load(trunc_ln241_reg_1172),
    .mul_ln242(mul_ln241_reg_1167),
    .add_ln249_out(grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_add_ln249_out),
    .add_ln249_out_ap_vld(grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_add_ln249_out_ap_vld),
    .enhanced_grid_flat_cells_triangles_V_address0(grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_enhanced_grid_flat_cells_triangles_V_address0),
    .enhanced_grid_flat_cells_triangles_V_ce0(grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_enhanced_grid_flat_cells_triangles_V_ce0),
    .enhanced_grid_flat_cells_triangles_V_q0(enhanced_grid_flat_cells_triangles_V_q0),
    .face_used_V_address0(grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_face_used_V_address0),
    .face_used_V_ce0(grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_face_used_V_ce0),
    .face_used_V_q0(face_used_V_q0),
    .ap_return(grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_return)
);

tri2d_mul_46s_48ns_93_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 46 ),
    .din1_WIDTH( 48 ),
    .dout_WIDTH( 93 ))
mul_46s_48ns_93_1_1_U161(
    .din0(t_15_fu_434_p3),
    .din1(mul_ln1303_1_fu_446_p1),
    .dout(mul_ln1303_1_fu_446_p2)
);

tri2d_mul_46s_48ns_93_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 46 ),
    .din1_WIDTH( 48 ),
    .dout_WIDTH( 93 ))
mul_46s_48ns_93_1_1_U162(
    .din0(t_fu_470_p3),
    .din1(mul_ln1303_fu_481_p1),
    .dout(mul_ln1303_fu_481_p2)
);

tri2d_sdiv_45ns_24s_45_49_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 49 ),
    .din0_WIDTH( 45 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 45 ))
sdiv_45ns_24s_45_49_seq_1_U163(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_618_ap_start),
    .done(grp_fu_618_ap_done),
    .din0(grp_fu_618_p0),
    .din1(enhanced_grid_cell_height_V),
    .ce(1'b1),
    .dout(grp_fu_618_p2)
);

tri2d_sdiv_45ns_24s_45_49_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 49 ),
    .din0_WIDTH( 45 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 45 ))
sdiv_45ns_24s_45_49_seq_1_U164(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_639_ap_start),
    .done(grp_fu_639_ap_done),
    .din0(grp_fu_639_p0),
    .din1(enhanced_grid_cell_width_V),
    .ce(1'b1),
    .dout(grp_fu_639_p2)
);

tri2d_mac_muladd_7ns_7ns_7ns_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 14 ))
mac_muladd_7ns_7ns_7ns_14_4_1_U165(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_939_p0),
    .din1(grp_fu_939_p1),
    .din2(grp_fu_939_p2),
    .ce(1'b1),
    .dout(grp_fu_939_p3)
);

tri2d_mul_mul_14ns_5ns_17_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 17 ))
mul_mul_14ns_5ns_17_4_1_U166(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_950_p0),
    .din1(grp_fu_950_p1),
    .ce(1'b1),
    .dout(grp_fu_950_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln241_fu_904_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state62))) begin
            grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_start_reg <= 1'b1;
        end else if ((grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_ready == 1'b1)) begin
            grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_add_ln249_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
        add_ln249_loc_fu_84 <= grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_add_ln249_out;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln233_fu_887_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state59))) begin
        enhanced_grid_flat_cells_triangle_count_addr_reg_1162 <= zext_ln238_fu_892_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        face_used_V_load_reg_979 <= face_used_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        grid_x_reg_1143 <= grid_x_fu_868_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln1027_7_reg_1035 <= grp_fu_280_p2;
        icmp_ln1027_reg_1019 <= icmp_ln1027_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln1027_8_reg_1051 <= grp_fu_280_p2;
        ret_V_74_reg_1067 <= ret_V_74_fu_366_p2;
        ret_V_75_reg_1072 <= ret_V_75_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        icmp_ln233_reg_1153 <= icmp_ln233_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        icmp_ln241_reg_1177 <= icmp_ln241_fu_904_p2;
        mul_ln241_reg_1167 <= grp_fu_950_p2;
        trunc_ln241_reg_1172 <= trunc_ln241_fu_899_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mul_ln1303_1_reg_1088 <= mul_ln1303_1_fu_446_p2;
        ret_V_reg_1077 <= ret_V_fu_407_p2;
        tmp_96_reg_1093 <= ret_V_65_fu_428_p2[32'd25];
        tmp_98_reg_1099 <= {{mul_ln1303_1_fu_446_p2[91:68]}};
        tmp_reg_1082 <= ret_V_fu_407_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        pointIdx_V_reg_998 <= he_tail_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ret_V_66_reg_1105 <= ret_V_66_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        targetBlock_reg_1181 <= grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        zext_ln541_reg_969[13 : 0] <= zext_ln541_fu_286_p1[13 : 0];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

always @ (*) begin
    if ((grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_done == 1'b0)) begin
        ap_ST_fsm_state63_blk = 1'b1;
    end else begin
        ap_ST_fsm_state63_blk = 1'b0;
    end
end

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state62))) begin
        enhanced_grid_flat_cells_triangle_count_ce0 = 1'b1;
    end else begin
        enhanced_grid_flat_cells_triangle_count_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln241_fu_904_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
        enhanced_grid_flat_cells_triangle_count_we0 = 1'b1;
    end else begin
        enhanced_grid_flat_cells_triangle_count_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        enhanced_grid_flat_cells_triangles_V_address0 = add_ln249_reload_cast_fu_934_p1;
    end else if (((icmp_ln241_fu_904_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
        enhanced_grid_flat_cells_triangles_V_address0 = zext_ln242_fu_919_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        enhanced_grid_flat_cells_triangles_V_address0 = grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_enhanced_grid_flat_cells_triangles_V_address0;
    end else begin
        enhanced_grid_flat_cells_triangles_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state64) | ((icmp_ln241_fu_904_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state62)))) begin
        enhanced_grid_flat_cells_triangles_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        enhanced_grid_flat_cells_triangles_V_ce0 = grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_enhanced_grid_flat_cells_triangles_V_ce0;
    end else begin
        enhanced_grid_flat_cells_triangles_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln241_fu_904_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state62)) | ((targetBlock_reg_1181 == 1'd0) & (icmp_ln241_reg_1177 == 1'd0) & (icmp_ln233_reg_1153 == 1'd1) & (1'b1 == ap_CS_fsm_state64) & (face_used_V_load_reg_979 == 1'd1)))) begin
        enhanced_grid_flat_cells_triangles_V_we0 = 1'b1;
    end else begin
        enhanced_grid_flat_cells_triangles_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        face_edge_V_ce0 = 1'b1;
    end else begin
        face_edge_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        face_used_V_address0 = zext_ln541_fu_286_p1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        face_used_V_address0 = grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_face_used_V_address0;
    end else begin
        face_used_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        face_used_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        face_used_V_ce0 = grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_face_used_V_ce0;
    end else begin
        face_used_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_618_ap_start = 1'b1;
    end else begin
        grp_fu_618_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_639_ap_start = 1'b1;
    end else begin
        grp_fu_639_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        he_next_V_address0 = zext_ln541_55_fu_297_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        he_next_V_address0 = zext_ln541_54_fu_291_p1;
    end else begin
        he_next_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        he_next_V_ce0 = 1'b1;
    end else begin
        he_next_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        he_tail_V_address0 = zext_ln541_56_fu_303_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        he_tail_V_address0 = zext_ln541_55_fu_297_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        he_tail_V_address0 = zext_ln541_54_fu_291_p1;
    end else begin
        he_tail_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        he_tail_V_ce0 = 1'b1;
    end else begin
        he_tail_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        vertex_x_V_address0 = zext_ln541_59_fu_352_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vertex_x_V_address0 = zext_ln541_58_fu_318_p1;
    end else begin
        vertex_x_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        vertex_x_V_ce0 = 1'b1;
    end else begin
        vertex_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        vertex_x_V_ce1 = 1'b1;
    end else begin
        vertex_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        vertex_y_V_address0 = zext_ln541_59_fu_352_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        vertex_y_V_address0 = zext_ln541_58_fu_318_p1;
    end else begin
        vertex_y_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        vertex_y_V_ce0 = 1'b1;
    end else begin
        vertex_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        vertex_y_V_ce1 = 1'b1;
    end else begin
        vertex_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((face_used_V_q0 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            if (((icmp_ln233_fu_887_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            if (((icmp_ln241_fu_904_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln143_fu_772_p2 = ($signed(zext_ln143_1_fu_769_p1) + $signed(8'd255));

assign add_ln145_fu_661_p2 = ($signed(zext_ln145_fu_657_p1) + $signed(8'd255));

assign add_ln242_fu_914_p0 = grp_fu_950_p2;

assign add_ln242_fu_914_p2 = (add_ln242_fu_914_p0 + trunc_ln242_fu_910_p1);

assign add_ln249_reload_cast_fu_934_p1 = add_ln249_loc_fu_84;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign centroid_x_V_fu_526_p3 = ((tmp_reg_1082[0:0] == 1'b1) ? sub_ln1303_1_fu_520_p2 : tmp_95_fu_503_p4);

assign centroid_y_V_fu_560_p3 = ((tmp_96_reg_1093[0:0] == 1'b1) ? sub_ln1303_3_fu_554_p2 : tmp_98_reg_1099);

assign enhanced_grid_flat_cells_triangle_count_address0 = enhanced_grid_flat_cells_triangle_count_addr_reg_1162;

assign enhanced_grid_flat_cells_triangle_count_d0 = (enhanced_grid_flat_cells_triangle_count_q0 + 32'd1);

assign enhanced_grid_flat_cells_triangles_V_d0 = triangleIdx;

assign face_edge_V_address0 = zext_ln541_reg_969;

assign grid_x_fu_868_p3 = ((icmp_ln224_fu_862_p2[0:0] == 1'b1) ? trunc_ln224_fu_858_p1 : 7'd0);

assign grid_y_fu_757_p3 = ((icmp_ln224_2_fu_751_p2[0:0] == 1'b1) ? trunc_ln224_3_fu_747_p1 : 7'd0);

assign grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_start = grp_assignTriangleToGrid_Pipeline_VITIS_LOOP_248_1_fu_269_ap_start_reg;

assign grp_fu_280_p2 = ((he_tail_V_q0 < 13'd5003) ? 1'b1 : 1'b0);

assign grp_fu_618_p0 = {{ret_V_70_fu_596_p2}, {20'd0}};

assign grp_fu_639_p0 = {{ret_V_66_reg_1105}, {20'd0}};

assign grp_fu_939_p0 = grp_fu_939_p00;

assign grp_fu_939_p00 = enhanced_grid_grid_size_x;

assign grp_fu_939_p1 = grp_fu_939_p10;

assign grp_fu_939_p10 = grid_y_fu_757_p3;

assign grp_fu_939_p2 = grp_fu_939_p20;

assign grp_fu_939_p20 = grid_x_reg_1143;

assign grp_fu_950_p0 = grp_fu_950_p00;

assign grp_fu_950_p00 = grp_fu_939_p3;

assign grp_fu_950_p1 = 17'd25;

assign icmp_ln1003_1_fu_701_p2 = ((trunc_ln1003_1_fu_697_p1 == 20'd0) ? 1'b1 : 1'b0);

assign icmp_ln1003_fu_812_p2 = ((trunc_ln1003_fu_808_p1 == 20'd0) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_308_p2 = ((pointIdx_V_reg_998 < 13'd5003) ? 1'b1 : 1'b0);

assign icmp_ln200_2_fu_733_p2 = (($signed(sext_ln813_21_fu_667_p1) > $signed(ret_V_73_fu_721_p3)) ? 1'b1 : 1'b0);

assign icmp_ln200_fu_844_p2 = (($signed(sext_ln813_17_fu_778_p1) > $signed(ret_V_69_fu_832_p3)) ? 1'b1 : 1'b0);

assign icmp_ln224_2_fu_751_p2 = (($signed(select_ln224_3_fu_739_p3) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln224_fu_862_p2 = (($signed(select_ln224_fu_850_p3) > $signed(25'd0)) ? 1'b1 : 1'b0);

assign icmp_ln233_fu_887_p2 = ((grp_fu_939_p3 < zext_ln233_fu_883_p1) ? 1'b1 : 1'b0);

assign icmp_ln241_fu_904_p2 = (($signed(enhanced_grid_flat_cells_triangle_count_q0) < $signed(32'd25)) ? 1'b1 : 1'b0);

assign mul_ln1303_1_fu_446_p1 = 93'd93824992236886;

assign mul_ln1303_fu_481_p1 = 93'd93824992236886;

assign p1_x_V_fu_331_p3 = ((icmp_ln1027_reg_1019[0:0] == 1'b1) ? vertex_x_V_q1 : 24'd0);

assign p1_y_V_fu_324_p3 = ((icmp_ln1027_reg_1019[0:0] == 1'b1) ? vertex_y_V_q1 : 24'd0);

assign p2_x_V_fu_338_p3 = ((icmp_ln1027_7_reg_1035[0:0] == 1'b1) ? vertex_x_V_q0 : 24'd0);

assign p2_y_V_fu_345_p3 = ((icmp_ln1027_7_reg_1035[0:0] == 1'b1) ? vertex_y_V_q0 : 24'd0);

assign p3_x_V_fu_386_p3 = ((icmp_ln1027_8_reg_1051[0:0] == 1'b1) ? vertex_x_V_q0 : 24'd0);

assign p3_y_V_fu_393_p3 = ((icmp_ln1027_8_reg_1051[0:0] == 1'b1) ? vertex_y_V_q0 : 24'd0);

assign p_Result_132_fu_689_p3 = grp_fu_618_p2[32'd44];

assign p_Result_s_fu_800_p3 = grp_fu_639_p2[32'd44];

assign ret_V_65_fu_428_p2 = ($signed(sext_ln813_15_fu_421_p1) + $signed(sext_ln813_16_fu_424_p1));

assign ret_V_66_fu_578_p2 = ($signed(sext_ln813_19_fu_566_p1) - $signed(sext_ln813_20_fu_574_p1));

assign ret_V_67_fu_786_p4 = {{grp_fu_639_p2[44:20]}};

assign ret_V_68_fu_818_p2 = ($signed(sext_ln987_fu_796_p1) + $signed(26'd1));

assign ret_V_69_fu_832_p3 = ((p_Result_s_fu_800_p3[0:0] == 1'b1) ? select_ln1002_fu_824_p3 : sext_ln987_fu_796_p1);

assign ret_V_70_fu_596_p2 = ($signed(sext_ln813_23_fu_584_p1) - $signed(sext_ln813_24_fu_592_p1));

assign ret_V_71_fu_675_p4 = {{grp_fu_618_p2[44:20]}};

assign ret_V_72_fu_707_p2 = ($signed(sext_ln987_1_fu_685_p1) + $signed(26'd1));

assign ret_V_73_fu_721_p3 = ((p_Result_132_fu_689_p3[0:0] == 1'b1) ? select_ln1002_1_fu_713_p3 : sext_ln987_1_fu_685_p1);

assign ret_V_74_fu_366_p2 = ($signed(sext_ln813_10_fu_362_p1) + $signed(sext_ln813_fu_358_p1));

assign ret_V_75_fu_380_p2 = ($signed(sext_ln813_14_fu_376_p1) + $signed(sext_ln813_13_fu_372_p1));

assign ret_V_fu_407_p2 = ($signed(sext_ln813_11_fu_400_p1) + $signed(sext_ln813_12_fu_403_p1));

assign select_ln1002_1_fu_713_p3 = ((icmp_ln1003_1_fu_701_p2[0:0] == 1'b1) ? sext_ln987_1_fu_685_p1 : ret_V_72_fu_707_p2);

assign select_ln1002_fu_824_p3 = ((icmp_ln1003_fu_812_p2[0:0] == 1'b1) ? sext_ln987_fu_796_p1 : ret_V_68_fu_818_p2);

assign select_ln1303_2_fu_548_p3 = ((tmp_96_reg_1093[0:0] == 1'b1) ? tmp_97_fu_538_p4 : tmp_98_reg_1099);

assign select_ln1303_fu_513_p3 = ((tmp_reg_1082[0:0] == 1'b1) ? tmp_94_fu_493_p4 : tmp_95_fu_503_p4);

assign select_ln224_3_fu_739_p3 = ((icmp_ln200_2_fu_733_p2[0:0] == 1'b1) ? trunc_ln983_1_fu_729_p1 : sext_ln813_22_fu_671_p1);

assign select_ln224_fu_850_p3 = ((icmp_ln200_fu_844_p2[0:0] == 1'b1) ? trunc_ln983_fu_840_p1 : sext_ln813_18_fu_782_p1);

assign sext_ln813_10_fu_362_p1 = $signed(p2_x_V_fu_338_p3);

assign sext_ln813_11_fu_400_p1 = $signed(ret_V_74_reg_1067);

assign sext_ln813_12_fu_403_p1 = $signed(p3_x_V_fu_386_p3);

assign sext_ln813_13_fu_372_p1 = $signed(p1_y_V_fu_324_p3);

assign sext_ln813_14_fu_376_p1 = $signed(p2_y_V_fu_345_p3);

assign sext_ln813_15_fu_421_p1 = $signed(ret_V_75_reg_1072);

assign sext_ln813_16_fu_424_p1 = $signed(p3_y_V_fu_393_p3);

assign sext_ln813_17_fu_778_p1 = add_ln143_fu_772_p2;

assign sext_ln813_18_fu_782_p1 = add_ln143_fu_772_p2;

assign sext_ln813_19_fu_566_p1 = $signed(centroid_x_V_fu_526_p3);

assign sext_ln813_20_fu_574_p1 = $signed(enhanced_grid_x_min_V);

assign sext_ln813_21_fu_667_p1 = add_ln145_fu_661_p2;

assign sext_ln813_22_fu_671_p1 = add_ln145_fu_661_p2;

assign sext_ln813_23_fu_584_p1 = $signed(centroid_y_V_fu_560_p3);

assign sext_ln813_24_fu_592_p1 = $signed(enhanced_grid_y_min_V);

assign sext_ln813_fu_358_p1 = $signed(p1_x_V_fu_331_p3);

assign sext_ln987_1_fu_685_p1 = $signed(ret_V_71_fu_675_p4);

assign sext_ln987_fu_796_p1 = $signed(ret_V_67_fu_786_p4);

assign sub_ln1303_1_fu_520_p2 = (24'd0 - select_ln1303_fu_513_p3);

assign sub_ln1303_2_fu_533_p2 = (93'd0 - mul_ln1303_1_reg_1088);

assign sub_ln1303_3_fu_554_p2 = (24'd0 - select_ln1303_2_fu_548_p3);

assign sub_ln1303_fu_487_p2 = (93'd0 - mul_ln1303_fu_481_p2);

assign t_15_fu_434_p3 = {{ret_V_65_fu_428_p2}, {20'd0}};

assign t_fu_470_p3 = {{ret_V_reg_1077}, {20'd0}};

assign tmp_94_fu_493_p4 = {{sub_ln1303_fu_487_p2[91:68]}};

assign tmp_95_fu_503_p4 = {{mul_ln1303_fu_481_p2[91:68]}};

assign tmp_97_fu_538_p4 = {{sub_ln1303_2_fu_533_p2[91:68]}};

assign trunc_ln1003_1_fu_697_p1 = grp_fu_618_p2[19:0];

assign trunc_ln1003_fu_808_p1 = grp_fu_639_p2[19:0];

assign trunc_ln224_3_fu_747_p1 = select_ln224_3_fu_739_p3[6:0];

assign trunc_ln224_fu_858_p1 = select_ln224_fu_850_p3[6:0];

assign trunc_ln241_fu_899_p1 = enhanced_grid_flat_cells_triangle_count_q0[30:0];

assign trunc_ln242_fu_910_p1 = enhanced_grid_flat_cells_triangle_count_q0[16:0];

assign trunc_ln983_1_fu_729_p1 = ret_V_73_fu_721_p3[24:0];

assign trunc_ln983_fu_840_p1 = ret_V_69_fu_832_p3[24:0];

assign vertex_x_V_address1 = zext_ln541_57_fu_313_p1;

assign vertex_y_V_address1 = zext_ln541_57_fu_313_p1;

assign zext_ln143_1_fu_769_p1 = enhanced_grid_grid_size_x;

assign zext_ln145_fu_657_p1 = enhanced_grid_grid_size_y;

assign zext_ln233_fu_883_p1 = enhanced_grid_total_cells;

assign zext_ln238_fu_892_p1 = grp_fu_939_p3;

assign zext_ln242_fu_919_p1 = add_ln242_fu_914_p2;

assign zext_ln541_54_fu_291_p1 = face_edge_V_q0;

assign zext_ln541_55_fu_297_p1 = he_next_V_q0;

assign zext_ln541_56_fu_303_p1 = he_next_V_q0;

assign zext_ln541_57_fu_313_p1 = pointIdx_V_reg_998;

assign zext_ln541_58_fu_318_p1 = he_tail_V_q0;

assign zext_ln541_59_fu_352_p1 = he_tail_V_q0;

assign zext_ln541_fu_286_p1 = triangleIdx;

always @ (posedge ap_clk) begin
    zext_ln541_reg_969[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
end

endmodule //tri2d_assignTriangleToGrid
