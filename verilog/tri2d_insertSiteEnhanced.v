// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tri2d_insertSiteEnhanced (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p,
        containingFace,
        global_edge_idx_V_i,
        global_edge_idx_V_o,
        global_edge_idx_V_o_ap_vld,
        face_edge_V_address0,
        face_edge_V_ce0,
        face_edge_V_we0,
        face_edge_V_d0,
        face_edge_V_q0,
        he_next_V_address0,
        he_next_V_ce0,
        he_next_V_we0,
        he_next_V_d0,
        he_next_V_q0,
        he_tail_V_address0,
        he_tail_V_ce0,
        he_tail_V_we0,
        he_tail_V_d0,
        he_tail_V_q0,
        he_tail_V_address1,
        he_tail_V_ce1,
        he_tail_V_we1,
        he_tail_V_d1,
        he_tail_V_q1,
        face_used_V_address0,
        face_used_V_ce0,
        face_used_V_we0,
        face_used_V_d0,
        face_used_V_q0,
        face_used_V_address1,
        face_used_V_ce1,
        face_used_V_q1,
        he_twin_V_address0,
        he_twin_V_ce0,
        he_twin_V_we0,
        he_twin_V_d0,
        he_twin_V_q0,
        he_twin_V_address1,
        he_twin_V_ce1,
        he_twin_V_we1,
        he_twin_V_d1,
        he_twin_V_q1,
        he_used_V_address0,
        he_used_V_ce0,
        he_used_V_we0,
        he_used_V_d0,
        he_used_V_q0,
        freeEdgeCount_i,
        freeEdgeCount_o,
        freeEdgeCount_o_ap_vld,
        tri_num_V_i,
        tri_num_V_o,
        tri_num_V_o_ap_vld,
        he_face_V_address0,
        he_face_V_ce0,
        he_face_V_we0,
        he_face_V_d0,
        he_face_V_q0,
        he_face_V_address1,
        he_face_V_ce1,
        he_face_V_q1,
        he_prev_V_address0,
        he_prev_V_ce0,
        he_prev_V_we0,
        he_prev_V_d0,
        he_prev_V_q0,
        vertex_x_V_address0,
        vertex_x_V_ce0,
        vertex_x_V_q0,
        vertex_x_V_address1,
        vertex_x_V_ce1,
        vertex_x_V_q1,
        vertex_y_V_address0,
        vertex_y_V_ce0,
        vertex_y_V_q0,
        vertex_y_V_address1,
        vertex_y_V_ce1,
        vertex_y_V_q1,
        enhanced_grid_grid_size_x,
        enhanced_grid_x_min_V,
        enhanced_grid_cell_width_V,
        enhanced_grid_grid_size_y,
        enhanced_grid_y_min_V,
        enhanced_grid_cell_height_V,
        enhanced_grid_total_cells,
        enhanced_grid_flat_cells_triangle_count_address0,
        enhanced_grid_flat_cells_triangle_count_ce0,
        enhanced_grid_flat_cells_triangle_count_we0,
        enhanced_grid_flat_cells_triangle_count_d0,
        enhanced_grid_flat_cells_triangle_count_q0,
        enhanced_grid_flat_cells_triangles_V_address0,
        enhanced_grid_flat_cells_triangles_V_ce0,
        enhanced_grid_flat_cells_triangles_V_we0,
        enhanced_grid_flat_cells_triangles_V_d0,
        enhanced_grid_flat_cells_triangles_V_q0,
        inserted_point_count_i,
        inserted_point_count_o,
        inserted_point_count_o_ap_vld,
        face_prev_V_address0,
        face_prev_V_ce0,
        face_prev_V_we0,
        face_prev_V_d0,
        face_prev_V_q0,
        face_next_V_address0,
        face_next_V_ce0,
        face_next_V_we0,
        face_next_V_d0,
        face_next_V_q0
);

parameter    ap_ST_fsm_state1 = 109'd1;
parameter    ap_ST_fsm_state2 = 109'd2;
parameter    ap_ST_fsm_state3 = 109'd4;
parameter    ap_ST_fsm_state4 = 109'd8;
parameter    ap_ST_fsm_state5 = 109'd16;
parameter    ap_ST_fsm_state6 = 109'd32;
parameter    ap_ST_fsm_state7 = 109'd64;
parameter    ap_ST_fsm_state8 = 109'd128;
parameter    ap_ST_fsm_state9 = 109'd256;
parameter    ap_ST_fsm_state10 = 109'd512;
parameter    ap_ST_fsm_state11 = 109'd1024;
parameter    ap_ST_fsm_state12 = 109'd2048;
parameter    ap_ST_fsm_state13 = 109'd4096;
parameter    ap_ST_fsm_state14 = 109'd8192;
parameter    ap_ST_fsm_state15 = 109'd16384;
parameter    ap_ST_fsm_state16 = 109'd32768;
parameter    ap_ST_fsm_state17 = 109'd65536;
parameter    ap_ST_fsm_state18 = 109'd131072;
parameter    ap_ST_fsm_state19 = 109'd262144;
parameter    ap_ST_fsm_state20 = 109'd524288;
parameter    ap_ST_fsm_state21 = 109'd1048576;
parameter    ap_ST_fsm_state22 = 109'd2097152;
parameter    ap_ST_fsm_state23 = 109'd4194304;
parameter    ap_ST_fsm_state24 = 109'd8388608;
parameter    ap_ST_fsm_state25 = 109'd16777216;
parameter    ap_ST_fsm_state26 = 109'd33554432;
parameter    ap_ST_fsm_state27 = 109'd67108864;
parameter    ap_ST_fsm_state28 = 109'd134217728;
parameter    ap_ST_fsm_state29 = 109'd268435456;
parameter    ap_ST_fsm_state30 = 109'd536870912;
parameter    ap_ST_fsm_state31 = 109'd1073741824;
parameter    ap_ST_fsm_state32 = 109'd2147483648;
parameter    ap_ST_fsm_state33 = 109'd4294967296;
parameter    ap_ST_fsm_state34 = 109'd8589934592;
parameter    ap_ST_fsm_state35 = 109'd17179869184;
parameter    ap_ST_fsm_state36 = 109'd34359738368;
parameter    ap_ST_fsm_state37 = 109'd68719476736;
parameter    ap_ST_fsm_state38 = 109'd137438953472;
parameter    ap_ST_fsm_state39 = 109'd274877906944;
parameter    ap_ST_fsm_state40 = 109'd549755813888;
parameter    ap_ST_fsm_state41 = 109'd1099511627776;
parameter    ap_ST_fsm_state42 = 109'd2199023255552;
parameter    ap_ST_fsm_state43 = 109'd4398046511104;
parameter    ap_ST_fsm_state44 = 109'd8796093022208;
parameter    ap_ST_fsm_state45 = 109'd17592186044416;
parameter    ap_ST_fsm_state46 = 109'd35184372088832;
parameter    ap_ST_fsm_state47 = 109'd70368744177664;
parameter    ap_ST_fsm_state48 = 109'd140737488355328;
parameter    ap_ST_fsm_state49 = 109'd281474976710656;
parameter    ap_ST_fsm_state50 = 109'd562949953421312;
parameter    ap_ST_fsm_state51 = 109'd1125899906842624;
parameter    ap_ST_fsm_state52 = 109'd2251799813685248;
parameter    ap_ST_fsm_state53 = 109'd4503599627370496;
parameter    ap_ST_fsm_state54 = 109'd9007199254740992;
parameter    ap_ST_fsm_state55 = 109'd18014398509481984;
parameter    ap_ST_fsm_state56 = 109'd36028797018963968;
parameter    ap_ST_fsm_state57 = 109'd72057594037927936;
parameter    ap_ST_fsm_state58 = 109'd144115188075855872;
parameter    ap_ST_fsm_state59 = 109'd288230376151711744;
parameter    ap_ST_fsm_state60 = 109'd576460752303423488;
parameter    ap_ST_fsm_state61 = 109'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 109'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 109'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 109'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 109'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 109'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 109'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 109'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 109'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 109'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 109'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 109'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 109'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 109'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 109'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 109'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 109'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 109'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 109'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 109'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 109'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 109'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 109'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 109'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 109'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 109'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 109'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 109'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 109'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 109'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 109'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 109'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 109'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 109'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 109'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 109'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 109'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 109'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 109'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 109'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 109'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 109'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 109'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 109'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 109'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 109'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 109'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 109'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 109'd324518553658426726783156020576256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [12:0] p;
input  [13:0] containingFace;
input  [14:0] global_edge_idx_V_i;
output  [14:0] global_edge_idx_V_o;
output   global_edge_idx_V_o_ap_vld;
output  [13:0] face_edge_V_address0;
output   face_edge_V_ce0;
output   face_edge_V_we0;
output  [14:0] face_edge_V_d0;
input  [14:0] face_edge_V_q0;
output  [15:0] he_next_V_address0;
output   he_next_V_ce0;
output   he_next_V_we0;
output  [14:0] he_next_V_d0;
input  [14:0] he_next_V_q0;
output  [15:0] he_tail_V_address0;
output   he_tail_V_ce0;
output   he_tail_V_we0;
output  [12:0] he_tail_V_d0;
input  [12:0] he_tail_V_q0;
output  [15:0] he_tail_V_address1;
output   he_tail_V_ce1;
output   he_tail_V_we1;
output  [12:0] he_tail_V_d1;
input  [12:0] he_tail_V_q1;
output  [13:0] face_used_V_address0;
output   face_used_V_ce0;
output   face_used_V_we0;
output  [0:0] face_used_V_d0;
input  [0:0] face_used_V_q0;
output  [13:0] face_used_V_address1;
output   face_used_V_ce1;
input  [0:0] face_used_V_q1;
output  [15:0] he_twin_V_address0;
output   he_twin_V_ce0;
output   he_twin_V_we0;
output  [14:0] he_twin_V_d0;
input  [14:0] he_twin_V_q0;
output  [15:0] he_twin_V_address1;
output   he_twin_V_ce1;
output   he_twin_V_we1;
output  [14:0] he_twin_V_d1;
input  [14:0] he_twin_V_q1;
output  [15:0] he_used_V_address0;
output   he_used_V_ce0;
output   he_used_V_we0;
output  [0:0] he_used_V_d0;
input  [0:0] he_used_V_q0;
input  [31:0] freeEdgeCount_i;
output  [31:0] freeEdgeCount_o;
output   freeEdgeCount_o_ap_vld;
input  [13:0] tri_num_V_i;
output  [13:0] tri_num_V_o;
output   tri_num_V_o_ap_vld;
output  [15:0] he_face_V_address0;
output   he_face_V_ce0;
output   he_face_V_we0;
output  [13:0] he_face_V_d0;
input  [13:0] he_face_V_q0;
output  [15:0] he_face_V_address1;
output   he_face_V_ce1;
input  [13:0] he_face_V_q1;
output  [15:0] he_prev_V_address0;
output   he_prev_V_ce0;
output   he_prev_V_we0;
output  [14:0] he_prev_V_d0;
input  [14:0] he_prev_V_q0;
output  [12:0] vertex_x_V_address0;
output   vertex_x_V_ce0;
input  [23:0] vertex_x_V_q0;
output  [12:0] vertex_x_V_address1;
output   vertex_x_V_ce1;
input  [23:0] vertex_x_V_q1;
output  [12:0] vertex_y_V_address0;
output   vertex_y_V_ce0;
input  [23:0] vertex_y_V_q0;
output  [12:0] vertex_y_V_address1;
output   vertex_y_V_ce1;
input  [23:0] vertex_y_V_q1;
input  [6:0] enhanced_grid_grid_size_x;
input  [23:0] enhanced_grid_x_min_V;
input  [23:0] enhanced_grid_cell_width_V;
input  [6:0] enhanced_grid_grid_size_y;
input  [23:0] enhanced_grid_y_min_V;
input  [23:0] enhanced_grid_cell_height_V;
input  [12:0] enhanced_grid_total_cells;
output  [11:0] enhanced_grid_flat_cells_triangle_count_address0;
output   enhanced_grid_flat_cells_triangle_count_ce0;
output   enhanced_grid_flat_cells_triangle_count_we0;
output  [31:0] enhanced_grid_flat_cells_triangle_count_d0;
input  [31:0] enhanced_grid_flat_cells_triangle_count_q0;
output  [16:0] enhanced_grid_flat_cells_triangles_V_address0;
output   enhanced_grid_flat_cells_triangles_V_ce0;
output   enhanced_grid_flat_cells_triangles_V_we0;
output  [13:0] enhanced_grid_flat_cells_triangles_V_d0;
input  [13:0] enhanced_grid_flat_cells_triangles_V_q0;
input  [31:0] inserted_point_count_i;
output  [31:0] inserted_point_count_o;
output   inserted_point_count_o_ap_vld;
output  [13:0] face_prev_V_address0;
output   face_prev_V_ce0;
output   face_prev_V_we0;
output  [13:0] face_prev_V_d0;
input  [13:0] face_prev_V_q0;
output  [13:0] face_next_V_address0;
output   face_next_V_ce0;
output   face_next_V_we0;
output  [13:0] face_next_V_d0;
input  [13:0] face_next_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[14:0] global_edge_idx_V_o;
reg global_edge_idx_V_o_ap_vld;
reg[13:0] face_edge_V_address0;
reg face_edge_V_ce0;
reg face_edge_V_we0;
reg[14:0] face_edge_V_d0;
reg[15:0] he_next_V_address0;
reg he_next_V_ce0;
reg he_next_V_we0;
reg[14:0] he_next_V_d0;
reg[15:0] he_tail_V_address0;
reg he_tail_V_ce0;
reg he_tail_V_we0;
reg[12:0] he_tail_V_d0;
reg[15:0] he_tail_V_address1;
reg he_tail_V_ce1;
reg he_tail_V_we1;
reg[12:0] he_tail_V_d1;
reg[13:0] face_used_V_address0;
reg face_used_V_ce0;
reg face_used_V_we0;
reg[0:0] face_used_V_d0;
reg face_used_V_ce1;
reg[15:0] he_twin_V_address0;
reg he_twin_V_ce0;
reg he_twin_V_we0;
reg[14:0] he_twin_V_d0;
reg[15:0] he_twin_V_address1;
reg he_twin_V_ce1;
reg he_twin_V_we1;
reg[14:0] he_twin_V_d1;
reg[15:0] he_used_V_address0;
reg he_used_V_ce0;
reg he_used_V_we0;
reg[0:0] he_used_V_d0;
reg[31:0] freeEdgeCount_o;
reg freeEdgeCount_o_ap_vld;
reg[13:0] tri_num_V_o;
reg tri_num_V_o_ap_vld;
reg[15:0] he_face_V_address0;
reg he_face_V_ce0;
reg he_face_V_we0;
reg[13:0] he_face_V_d0;
reg he_face_V_ce1;
reg[15:0] he_prev_V_address0;
reg he_prev_V_ce0;
reg he_prev_V_we0;
reg[14:0] he_prev_V_d0;
reg[12:0] vertex_x_V_address0;
reg vertex_x_V_ce0;
reg[12:0] vertex_x_V_address1;
reg vertex_x_V_ce1;
reg[12:0] vertex_y_V_address0;
reg vertex_y_V_ce0;
reg[12:0] vertex_y_V_address1;
reg vertex_y_V_ce1;
reg[11:0] enhanced_grid_flat_cells_triangle_count_address0;
reg enhanced_grid_flat_cells_triangle_count_ce0;
reg enhanced_grid_flat_cells_triangle_count_we0;
reg[31:0] enhanced_grid_flat_cells_triangle_count_d0;
reg[16:0] enhanced_grid_flat_cells_triangles_V_address0;
reg enhanced_grid_flat_cells_triangles_V_ce0;
reg enhanced_grid_flat_cells_triangles_V_we0;
reg[13:0] enhanced_grid_flat_cells_triangles_V_d0;
reg[31:0] inserted_point_count_o;
reg inserted_point_count_o_ap_vld;

(* fsm_encoding = "none" *) reg   [108:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] insert_count;
reg   [31:0] processed_actual_points;
reg   [8:0] freeEdges_V_address0;
reg    freeEdges_V_ce0;
reg    freeEdges_V_we0;
reg   [14:0] freeEdges_V_d0;
wire   [14:0] freeEdges_V_q0;
reg   [9:0] replaceIdx;
reg   [14:0] reg_1018;
wire    ap_CS_fsm_state74;
wire    grp_allocateHalfEdge_fu_864_ap_done;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state82;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state86;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state90;
wire   [14:0] grp_legalizeEdge_fu_908_ap_return;
reg   [14:0] reg_1025;
wire    ap_CS_fsm_state103;
wire    grp_legalizeEdge_fu_908_ap_done;
wire    ap_CS_fsm_state105;
reg   [14:0] orig_e1_V_reg_1411;
wire    ap_CS_fsm_state2;
reg   [14:0] orig_e2_V_reg_1431;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln541_37_fu_1060_p1;
reg   [63:0] zext_ln541_37_reg_1436;
reg   [12:0] he_tail_V_load_reg_1448;
reg   [14:0] e2_V_12_reg_1454;
reg   [14:0] orig_e3_V_reg_1460;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln541_38_fu_1065_p1;
reg   [63:0] zext_ln541_38_reg_1470;
wire    ap_CS_fsm_state5;
wire   [0:0] isFirstPoint_fu_1075_p2;
reg   [0:0] isFirstPoint_reg_1496;
reg   [12:0] he_tail_V_load_3_reg_1503;
reg   [12:0] he_tail_V_load_4_reg_1508;
reg   [14:0] e2_V_reg_1513;
reg   [14:0] e2_V_13_reg_1519;
wire   [0:0] icmp_ln451_fu_1101_p2;
reg   [0:0] icmp_ln451_reg_1528;
wire   [0:0] icmp_ln451_1_fu_1143_p2;
reg   [0:0] icmp_ln451_1_reg_1537;
wire    ap_CS_fsm_state19;
wire   [31:0] add_ln452_fu_1175_p2;
wire    ap_CS_fsm_state32;
wire   [0:0] icmp_ln451_2_fu_1196_p2;
reg   [0:0] icmp_ln451_2_reg_1551;
wire    ap_CS_fsm_state46;
wire   [31:0] add_ln452_1_fu_1240_p2;
wire    ap_CS_fsm_state59;
reg   [14:0] e1_V_reg_1565;
reg   [14:0] e2_V_14_reg_1574;
reg   [14:0] e3_V_reg_1583;
reg   [14:0] e4_V_reg_1591;
reg   [14:0] e5_V_reg_1600;
reg   [14:0] e6_V_reg_1609;
reg   [14:0] e7_V_reg_1617;
reg   [13:0] f1_V_reg_1626;
wire    ap_CS_fsm_state87;
wire   [63:0] zext_ln541_40_fu_1274_p1;
reg   [63:0] zext_ln541_40_reg_1633;
wire   [63:0] zext_ln541_41_fu_1282_p1;
reg   [63:0] zext_ln541_41_reg_1638;
reg   [14:0] e8_V_reg_1643;
wire   [63:0] zext_ln541_42_fu_1290_p1;
reg   [63:0] zext_ln541_42_reg_1652;
wire    ap_CS_fsm_state89;
reg   [13:0] f2_V_reg_1657;
wire   [63:0] zext_ln541_44_fu_1310_p1;
reg   [63:0] zext_ln541_44_reg_1664;
reg   [14:0] e9_V_reg_1669;
wire   [63:0] zext_ln541_45_fu_1318_p1;
reg   [63:0] zext_ln541_45_reg_1676;
wire    ap_CS_fsm_state91;
wire   [63:0] zext_ln541_50_fu_1326_p1;
reg   [63:0] zext_ln541_50_reg_1681;
wire   [63:0] zext_ln541_46_fu_1330_p1;
reg   [63:0] zext_ln541_46_reg_1690;
wire    ap_CS_fsm_state92;
reg   [13:0] f3_V_reg_1695;
wire    ap_CS_fsm_state93;
wire   [63:0] zext_ln541_48_fu_1350_p1;
reg   [63:0] zext_ln541_48_reg_1702;
wire   [63:0] zext_ln541_49_fu_1358_p1;
reg   [63:0] zext_ln541_49_reg_1707;
wire    ap_CS_fsm_state94;
wire   [31:0] add_ln859_fu_1388_p2;
wire    ap_CS_fsm_state108;
wire   [0:0] icmp_ln860_fu_1394_p2;
reg   [0:0] icmp_ln860_reg_1717;
wire    grp_allocateHalfEdge_fu_864_ap_start;
wire    grp_allocateHalfEdge_fu_864_ap_idle;
wire    grp_allocateHalfEdge_fu_864_ap_ready;
reg   [14:0] grp_allocateHalfEdge_fu_864_newEdgeIdx_V_read;
wire   [31:0] grp_allocateHalfEdge_fu_864_freeEdgeCount_o;
wire    grp_allocateHalfEdge_fu_864_freeEdgeCount_o_ap_vld;
wire   [8:0] grp_allocateHalfEdge_fu_864_freeEdges_V_address0;
wire    grp_allocateHalfEdge_fu_864_freeEdges_V_ce0;
wire   [14:0] grp_allocateHalfEdge_fu_864_ap_return_0;
wire   [14:0] grp_allocateHalfEdge_fu_864_ap_return_1;
wire    grp_assignTriangleToGrid_fu_873_ap_start;
wire    grp_assignTriangleToGrid_fu_873_ap_done;
wire    grp_assignTriangleToGrid_fu_873_ap_idle;
wire    grp_assignTriangleToGrid_fu_873_ap_ready;
reg   [13:0] grp_assignTriangleToGrid_fu_873_triangleIdx;
wire   [13:0] grp_assignTriangleToGrid_fu_873_face_used_V_address0;
wire    grp_assignTriangleToGrid_fu_873_face_used_V_ce0;
wire   [13:0] grp_assignTriangleToGrid_fu_873_face_edge_V_address0;
wire    grp_assignTriangleToGrid_fu_873_face_edge_V_ce0;
wire   [15:0] grp_assignTriangleToGrid_fu_873_he_tail_V_address0;
wire    grp_assignTriangleToGrid_fu_873_he_tail_V_ce0;
wire   [15:0] grp_assignTriangleToGrid_fu_873_he_next_V_address0;
wire    grp_assignTriangleToGrid_fu_873_he_next_V_ce0;
wire   [12:0] grp_assignTriangleToGrid_fu_873_vertex_x_V_address0;
wire    grp_assignTriangleToGrid_fu_873_vertex_x_V_ce0;
wire   [12:0] grp_assignTriangleToGrid_fu_873_vertex_x_V_address1;
wire    grp_assignTriangleToGrid_fu_873_vertex_x_V_ce1;
wire   [12:0] grp_assignTriangleToGrid_fu_873_vertex_y_V_address0;
wire    grp_assignTriangleToGrid_fu_873_vertex_y_V_ce0;
wire   [12:0] grp_assignTriangleToGrid_fu_873_vertex_y_V_address1;
wire    grp_assignTriangleToGrid_fu_873_vertex_y_V_ce1;
wire   [11:0] grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangle_count_address0;
wire    grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangle_count_ce0;
wire    grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangle_count_we0;
wire   [31:0] grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangle_count_d0;
wire   [16:0] grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangles_V_address0;
wire    grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangles_V_ce0;
wire    grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangles_V_we0;
wire   [13:0] grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangles_V_d0;
wire    grp_legalizeEdge_fu_908_ap_start;
wire    grp_legalizeEdge_fu_908_ap_idle;
wire    grp_legalizeEdge_fu_908_ap_ready;
reg   [13:0] grp_legalizeEdge_fu_908_faceIdx;
reg   [14:0] grp_legalizeEdge_fu_908_edgeIdx;
reg   [14:0] grp_legalizeEdge_fu_908_newEdgeIdx_V_read;
wire   [15:0] grp_legalizeEdge_fu_908_he_used_V_address0;
wire    grp_legalizeEdge_fu_908_he_used_V_ce0;
wire    grp_legalizeEdge_fu_908_he_used_V_we0;
wire   [0:0] grp_legalizeEdge_fu_908_he_used_V_d0;
wire   [13:0] grp_legalizeEdge_fu_908_face_used_V_address0;
wire    grp_legalizeEdge_fu_908_face_used_V_ce0;
wire    grp_legalizeEdge_fu_908_face_used_V_we0;
wire   [0:0] grp_legalizeEdge_fu_908_face_used_V_d0;
wire   [15:0] grp_legalizeEdge_fu_908_he_tail_V_address0;
wire    grp_legalizeEdge_fu_908_he_tail_V_ce0;
wire    grp_legalizeEdge_fu_908_he_tail_V_we0;
wire   [12:0] grp_legalizeEdge_fu_908_he_tail_V_d0;
wire   [15:0] grp_legalizeEdge_fu_908_he_tail_V_address1;
wire    grp_legalizeEdge_fu_908_he_tail_V_ce1;
wire    grp_legalizeEdge_fu_908_he_tail_V_we1;
wire   [12:0] grp_legalizeEdge_fu_908_he_tail_V_d1;
wire   [15:0] grp_legalizeEdge_fu_908_he_next_V_address0;
wire    grp_legalizeEdge_fu_908_he_next_V_ce0;
wire    grp_legalizeEdge_fu_908_he_next_V_we0;
wire   [14:0] grp_legalizeEdge_fu_908_he_next_V_d0;
wire   [15:0] grp_legalizeEdge_fu_908_he_prev_V_address0;
wire    grp_legalizeEdge_fu_908_he_prev_V_ce0;
wire    grp_legalizeEdge_fu_908_he_prev_V_we0;
wire   [14:0] grp_legalizeEdge_fu_908_he_prev_V_d0;
wire   [15:0] grp_legalizeEdge_fu_908_he_twin_V_address0;
wire    grp_legalizeEdge_fu_908_he_twin_V_ce0;
wire    grp_legalizeEdge_fu_908_he_twin_V_we0;
wire   [14:0] grp_legalizeEdge_fu_908_he_twin_V_d0;
wire   [15:0] grp_legalizeEdge_fu_908_he_twin_V_address1;
wire    grp_legalizeEdge_fu_908_he_twin_V_ce1;
wire    grp_legalizeEdge_fu_908_he_twin_V_we1;
wire   [14:0] grp_legalizeEdge_fu_908_he_twin_V_d1;
wire   [15:0] grp_legalizeEdge_fu_908_he_face_V_address0;
wire    grp_legalizeEdge_fu_908_he_face_V_ce0;
wire    grp_legalizeEdge_fu_908_he_face_V_we0;
wire   [13:0] grp_legalizeEdge_fu_908_he_face_V_d0;
wire   [12:0] grp_legalizeEdge_fu_908_vertex_x_V_address0;
wire    grp_legalizeEdge_fu_908_vertex_x_V_ce0;
wire   [12:0] grp_legalizeEdge_fu_908_vertex_x_V_address1;
wire    grp_legalizeEdge_fu_908_vertex_x_V_ce1;
wire   [12:0] grp_legalizeEdge_fu_908_vertex_y_V_address0;
wire    grp_legalizeEdge_fu_908_vertex_y_V_ce0;
wire   [12:0] grp_legalizeEdge_fu_908_vertex_y_V_address1;
wire    grp_legalizeEdge_fu_908_vertex_y_V_ce1;
wire   [31:0] grp_legalizeEdge_fu_908_freeEdgeCount_o;
wire    grp_legalizeEdge_fu_908_freeEdgeCount_o_ap_vld;
wire   [8:0] grp_legalizeEdge_fu_908_freeEdges_V_address0;
wire    grp_legalizeEdge_fu_908_freeEdges_V_ce0;
wire    grp_legalizeEdge_fu_908_freeEdges_V_we0;
wire   [14:0] grp_legalizeEdge_fu_908_freeEdges_V_d0;
wire   [9:0] grp_legalizeEdge_fu_908_replaceIdx_o;
wire    grp_legalizeEdge_fu_908_replaceIdx_o_ap_vld;
wire   [13:0] grp_legalizeEdge_fu_908_tri_num_V_o;
wire    grp_legalizeEdge_fu_908_tri_num_V_o_ap_vld;
wire   [13:0] grp_legalizeEdge_fu_908_face_edge_V_address0;
wire    grp_legalizeEdge_fu_908_face_edge_V_ce0;
wire    grp_legalizeEdge_fu_908_face_edge_V_we0;
wire   [14:0] grp_legalizeEdge_fu_908_face_edge_V_d0;
wire   [11:0] grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangle_count_address0;
wire    grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangle_count_ce0;
wire    grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangle_count_we0;
wire   [31:0] grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangle_count_d0;
wire   [16:0] grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangles_V_address0;
wire    grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangles_V_ce0;
wire    grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangles_V_we0;
wire   [13:0] grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangles_V_d0;
wire    grp_compactTriangleIndices_fu_968_ap_start;
wire    grp_compactTriangleIndices_fu_968_ap_done;
wire    grp_compactTriangleIndices_fu_968_ap_idle;
wire    grp_compactTriangleIndices_fu_968_ap_ready;
wire   [13:0] grp_compactTriangleIndices_fu_968_tri_num_V_o;
wire    grp_compactTriangleIndices_fu_968_tri_num_V_o_ap_vld;
wire   [13:0] grp_compactTriangleIndices_fu_968_face_used_V_address0;
wire    grp_compactTriangleIndices_fu_968_face_used_V_ce0;
wire    grp_compactTriangleIndices_fu_968_face_used_V_we0;
wire   [0:0] grp_compactTriangleIndices_fu_968_face_used_V_d0;
wire   [13:0] grp_compactTriangleIndices_fu_968_face_used_V_address1;
wire    grp_compactTriangleIndices_fu_968_face_used_V_ce1;
wire   [13:0] grp_compactTriangleIndices_fu_968_face_edge_V_address0;
wire    grp_compactTriangleIndices_fu_968_face_edge_V_ce0;
wire    grp_compactTriangleIndices_fu_968_face_edge_V_we0;
wire   [14:0] grp_compactTriangleIndices_fu_968_face_edge_V_d0;
wire   [13:0] grp_compactTriangleIndices_fu_968_face_prev_V_address0;
wire    grp_compactTriangleIndices_fu_968_face_prev_V_ce0;
wire    grp_compactTriangleIndices_fu_968_face_prev_V_we0;
wire   [13:0] grp_compactTriangleIndices_fu_968_face_prev_V_d0;
wire   [13:0] grp_compactTriangleIndices_fu_968_face_next_V_address0;
wire    grp_compactTriangleIndices_fu_968_face_next_V_ce0;
wire    grp_compactTriangleIndices_fu_968_face_next_V_we0;
wire   [13:0] grp_compactTriangleIndices_fu_968_face_next_V_d0;
wire   [15:0] grp_compactTriangleIndices_fu_968_he_used_V_address0;
wire    grp_compactTriangleIndices_fu_968_he_used_V_ce0;
wire   [15:0] grp_compactTriangleIndices_fu_968_he_face_V_address0;
wire    grp_compactTriangleIndices_fu_968_he_face_V_ce0;
wire    grp_compactTriangleIndices_fu_968_he_face_V_we0;
wire   [13:0] grp_compactTriangleIndices_fu_968_he_face_V_d0;
wire   [15:0] grp_compactTriangleIndices_fu_968_he_face_V_address1;
wire    grp_compactTriangleIndices_fu_968_he_face_V_ce1;
wire   [11:0] grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangle_count_address0;
wire    grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangle_count_ce0;
wire    grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangle_count_we0;
wire   [31:0] grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangle_count_d0;
wire   [16:0] grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangles_V_address0;
wire    grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangles_V_ce0;
wire    grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangles_V_we0;
wire   [13:0] grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangles_V_d0;
reg   [31:0] ap_phi_mux_empty_phi_fu_828_p4;
reg   [31:0] empty_reg_825;
reg   [31:0] ap_phi_mux_empty_72_phi_fu_838_p4;
reg   [31:0] empty_72_reg_835;
reg   [14:0] ap_phi_mux_newEdgeIdx_V_0_phi_fu_848_p4;
reg   [14:0] newEdgeIdx_V_0_reg_845;
wire    ap_CS_fsm_state101;
wire    ap_CS_fsm_state107;
reg    ap_block_state107_on_subcall_done;
reg   [31:0] ap_phi_mux_inserted_point_count_new_0_phi_fu_857_p4;
reg   [31:0] inserted_point_count_new_0_reg_854;
wire    ap_CS_fsm_state109;
reg    ap_block_state109_on_subcall_done;
reg    grp_allocateHalfEdge_fu_864_ap_start_reg;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state75;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state85;
reg    grp_assignTriangleToGrid_fu_873_ap_start_reg;
wire    ap_CS_fsm_state96;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state97;
wire    ap_CS_fsm_state99;
reg    grp_legalizeEdge_fu_908_ap_start_reg;
wire    ap_CS_fsm_state102;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state106;
reg    grp_compactTriangleIndices_fu_968_ap_start_reg;
wire   [63:0] zext_ln541_fu_1046_p1;
wire   [63:0] zext_ln541_36_fu_1052_p1;
wire   [63:0] zext_ln454_fu_1111_p1;
wire   [63:0] zext_ln452_fu_1128_p1;
wire   [63:0] zext_ln454_1_fu_1153_p1;
wire   [63:0] zext_ln452_1_fu_1170_p1;
wire   [63:0] zext_ln454_2_fu_1206_p1;
wire   [63:0] zext_ln452_2_fu_1235_p1;
wire   [63:0] zext_ln541_39_fu_1268_p1;
wire   [63:0] zext_ln541_43_fu_1304_p1;
wire   [63:0] zext_ln541_47_fu_1344_p1;
wire    ap_CS_fsm_state95;
wire   [63:0] zext_ln541_51_fu_1366_p1;
wire   [63:0] zext_ln541_52_fu_1370_p1;
wire   [63:0] zext_ln541_53_fu_1374_p1;
wire   [31:0] add_ln690_fu_1034_p2;
wire   [31:0] add_ln710_fu_1081_p2;
wire   [31:0] add_ln452_2_fu_1223_p2;
wire   [9:0] trunc_ln455_2_fu_1252_p1;
wire   [9:0] trunc_ln455_1_fu_1186_p1;
wire   [9:0] trunc_ln455_fu_1133_p1;
reg   [9:0] ap_sig_allocacmp_replaceIdx_load_2;
reg   [9:0] ap_sig_allocacmp_replaceIdx_load_1;
reg  signed [9:0] grp_load_fu_994_p1;
wire   [13:0] grp_fu_1012_p2;
wire  signed [10:0] sext_ln454_1_fu_1107_p1;
wire   [10:0] grp_fu_1122_p0;
wire   [9:0] grp_fu_1122_p1;
wire   [9:0] grp_fu_1122_p2;
wire  signed [10:0] sext_ln454_fu_1149_p1;
wire   [10:0] grp_fu_1164_p0;
wire   [9:0] grp_fu_1164_p1;
wire   [9:0] grp_fu_1164_p2;
wire  signed [10:0] sext_ln454_2_fu_1202_p1;
wire   [10:0] grp_fu_1217_p0;
wire   [9:0] grp_fu_1217_p1;
wire   [9:0] grp_fu_1217_p2;
reg    grp_fu_1122_ap_start;
wire    grp_fu_1122_ap_done;
reg    grp_fu_1164_ap_start;
wire    grp_fu_1164_ap_done;
reg    grp_fu_1217_ap_start;
wire    grp_fu_1217_ap_done;
reg   [108:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
reg    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
reg    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
reg    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
reg    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
reg    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
reg    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
reg    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
reg    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
reg    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
reg    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
reg    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
reg    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
reg    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
reg    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
reg    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
reg    ap_ST_fsm_state109_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 109'd1;
#0 insert_count = 32'd0;
#0 processed_actual_points = 32'd0;
#0 replaceIdx = 10'd0;
#0 grp_allocateHalfEdge_fu_864_ap_start_reg = 1'b0;
#0 grp_assignTriangleToGrid_fu_873_ap_start_reg = 1'b0;
#0 grp_legalizeEdge_fu_908_ap_start_reg = 1'b0;
#0 grp_compactTriangleIndices_fu_968_ap_start_reg = 1'b0;
end

tri2d_insertSiteEnhanced_freeEdges_V_RAM_AUTO_1R1W #(
    .DataWidth( 15 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
freeEdges_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(freeEdges_V_address0),
    .ce0(freeEdges_V_ce0),
    .we0(freeEdges_V_we0),
    .d0(freeEdges_V_d0),
    .q0(freeEdges_V_q0)
);

tri2d_allocateHalfEdge grp_allocateHalfEdge_fu_864(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_allocateHalfEdge_fu_864_ap_start),
    .ap_done(grp_allocateHalfEdge_fu_864_ap_done),
    .ap_idle(grp_allocateHalfEdge_fu_864_ap_idle),
    .ap_ready(grp_allocateHalfEdge_fu_864_ap_ready),
    .newEdgeIdx_V_read(grp_allocateHalfEdge_fu_864_newEdgeIdx_V_read),
    .freeEdgeCount_i(freeEdgeCount_i),
    .freeEdgeCount_o(grp_allocateHalfEdge_fu_864_freeEdgeCount_o),
    .freeEdgeCount_o_ap_vld(grp_allocateHalfEdge_fu_864_freeEdgeCount_o_ap_vld),
    .freeEdges_V_address0(grp_allocateHalfEdge_fu_864_freeEdges_V_address0),
    .freeEdges_V_ce0(grp_allocateHalfEdge_fu_864_freeEdges_V_ce0),
    .freeEdges_V_q0(freeEdges_V_q0),
    .ap_return_0(grp_allocateHalfEdge_fu_864_ap_return_0),
    .ap_return_1(grp_allocateHalfEdge_fu_864_ap_return_1)
);

tri2d_assignTriangleToGrid grp_assignTriangleToGrid_fu_873(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_assignTriangleToGrid_fu_873_ap_start),
    .ap_done(grp_assignTriangleToGrid_fu_873_ap_done),
    .ap_idle(grp_assignTriangleToGrid_fu_873_ap_idle),
    .ap_ready(grp_assignTriangleToGrid_fu_873_ap_ready),
    .triangleIdx(grp_assignTriangleToGrid_fu_873_triangleIdx),
    .face_used_V_address0(grp_assignTriangleToGrid_fu_873_face_used_V_address0),
    .face_used_V_ce0(grp_assignTriangleToGrid_fu_873_face_used_V_ce0),
    .face_used_V_q0(face_used_V_q0),
    .face_edge_V_address0(grp_assignTriangleToGrid_fu_873_face_edge_V_address0),
    .face_edge_V_ce0(grp_assignTriangleToGrid_fu_873_face_edge_V_ce0),
    .face_edge_V_q0(face_edge_V_q0),
    .he_tail_V_address0(grp_assignTriangleToGrid_fu_873_he_tail_V_address0),
    .he_tail_V_ce0(grp_assignTriangleToGrid_fu_873_he_tail_V_ce0),
    .he_tail_V_q0(he_tail_V_q0),
    .he_next_V_address0(grp_assignTriangleToGrid_fu_873_he_next_V_address0),
    .he_next_V_ce0(grp_assignTriangleToGrid_fu_873_he_next_V_ce0),
    .he_next_V_q0(he_next_V_q0),
    .vertex_x_V_address0(grp_assignTriangleToGrid_fu_873_vertex_x_V_address0),
    .vertex_x_V_ce0(grp_assignTriangleToGrid_fu_873_vertex_x_V_ce0),
    .vertex_x_V_q0(vertex_x_V_q0),
    .vertex_x_V_address1(grp_assignTriangleToGrid_fu_873_vertex_x_V_address1),
    .vertex_x_V_ce1(grp_assignTriangleToGrid_fu_873_vertex_x_V_ce1),
    .vertex_x_V_q1(vertex_x_V_q1),
    .vertex_y_V_address0(grp_assignTriangleToGrid_fu_873_vertex_y_V_address0),
    .vertex_y_V_ce0(grp_assignTriangleToGrid_fu_873_vertex_y_V_ce0),
    .vertex_y_V_q0(vertex_y_V_q0),
    .vertex_y_V_address1(grp_assignTriangleToGrid_fu_873_vertex_y_V_address1),
    .vertex_y_V_ce1(grp_assignTriangleToGrid_fu_873_vertex_y_V_ce1),
    .vertex_y_V_q1(vertex_y_V_q1),
    .enhanced_grid_grid_size_x(enhanced_grid_grid_size_x),
    .enhanced_grid_x_min_V(enhanced_grid_x_min_V),
    .enhanced_grid_cell_width_V(enhanced_grid_cell_width_V),
    .enhanced_grid_grid_size_y(enhanced_grid_grid_size_y),
    .enhanced_grid_y_min_V(enhanced_grid_y_min_V),
    .enhanced_grid_cell_height_V(enhanced_grid_cell_height_V),
    .enhanced_grid_total_cells(enhanced_grid_total_cells),
    .enhanced_grid_flat_cells_triangle_count_address0(grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangle_count_address0),
    .enhanced_grid_flat_cells_triangle_count_ce0(grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangle_count_ce0),
    .enhanced_grid_flat_cells_triangle_count_we0(grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangle_count_we0),
    .enhanced_grid_flat_cells_triangle_count_d0(grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangle_count_d0),
    .enhanced_grid_flat_cells_triangle_count_q0(enhanced_grid_flat_cells_triangle_count_q0),
    .enhanced_grid_flat_cells_triangles_V_address0(grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangles_V_address0),
    .enhanced_grid_flat_cells_triangles_V_ce0(grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangles_V_ce0),
    .enhanced_grid_flat_cells_triangles_V_we0(grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangles_V_we0),
    .enhanced_grid_flat_cells_triangles_V_d0(grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangles_V_d0),
    .enhanced_grid_flat_cells_triangles_V_q0(enhanced_grid_flat_cells_triangles_V_q0)
);

tri2d_legalizeEdge grp_legalizeEdge_fu_908(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_legalizeEdge_fu_908_ap_start),
    .ap_done(grp_legalizeEdge_fu_908_ap_done),
    .ap_idle(grp_legalizeEdge_fu_908_ap_idle),
    .ap_ready(grp_legalizeEdge_fu_908_ap_ready),
    .faceIdx(grp_legalizeEdge_fu_908_faceIdx),
    .edgeIdx(grp_legalizeEdge_fu_908_edgeIdx),
    .newEdgeIdx_V_read(grp_legalizeEdge_fu_908_newEdgeIdx_V_read),
    .he_used_V_address0(grp_legalizeEdge_fu_908_he_used_V_address0),
    .he_used_V_ce0(grp_legalizeEdge_fu_908_he_used_V_ce0),
    .he_used_V_we0(grp_legalizeEdge_fu_908_he_used_V_we0),
    .he_used_V_d0(grp_legalizeEdge_fu_908_he_used_V_d0),
    .he_used_V_q0(he_used_V_q0),
    .face_used_V_address0(grp_legalizeEdge_fu_908_face_used_V_address0),
    .face_used_V_ce0(grp_legalizeEdge_fu_908_face_used_V_ce0),
    .face_used_V_we0(grp_legalizeEdge_fu_908_face_used_V_we0),
    .face_used_V_d0(grp_legalizeEdge_fu_908_face_used_V_d0),
    .face_used_V_q0(face_used_V_q0),
    .he_tail_V_address0(grp_legalizeEdge_fu_908_he_tail_V_address0),
    .he_tail_V_ce0(grp_legalizeEdge_fu_908_he_tail_V_ce0),
    .he_tail_V_we0(grp_legalizeEdge_fu_908_he_tail_V_we0),
    .he_tail_V_d0(grp_legalizeEdge_fu_908_he_tail_V_d0),
    .he_tail_V_q0(he_tail_V_q0),
    .he_tail_V_address1(grp_legalizeEdge_fu_908_he_tail_V_address1),
    .he_tail_V_ce1(grp_legalizeEdge_fu_908_he_tail_V_ce1),
    .he_tail_V_we1(grp_legalizeEdge_fu_908_he_tail_V_we1),
    .he_tail_V_d1(grp_legalizeEdge_fu_908_he_tail_V_d1),
    .he_tail_V_q1(he_tail_V_q1),
    .he_next_V_address0(grp_legalizeEdge_fu_908_he_next_V_address0),
    .he_next_V_ce0(grp_legalizeEdge_fu_908_he_next_V_ce0),
    .he_next_V_we0(grp_legalizeEdge_fu_908_he_next_V_we0),
    .he_next_V_d0(grp_legalizeEdge_fu_908_he_next_V_d0),
    .he_next_V_q0(he_next_V_q0),
    .he_prev_V_address0(grp_legalizeEdge_fu_908_he_prev_V_address0),
    .he_prev_V_ce0(grp_legalizeEdge_fu_908_he_prev_V_ce0),
    .he_prev_V_we0(grp_legalizeEdge_fu_908_he_prev_V_we0),
    .he_prev_V_d0(grp_legalizeEdge_fu_908_he_prev_V_d0),
    .he_prev_V_q0(he_prev_V_q0),
    .he_twin_V_address0(grp_legalizeEdge_fu_908_he_twin_V_address0),
    .he_twin_V_ce0(grp_legalizeEdge_fu_908_he_twin_V_ce0),
    .he_twin_V_we0(grp_legalizeEdge_fu_908_he_twin_V_we0),
    .he_twin_V_d0(grp_legalizeEdge_fu_908_he_twin_V_d0),
    .he_twin_V_q0(he_twin_V_q0),
    .he_twin_V_address1(grp_legalizeEdge_fu_908_he_twin_V_address1),
    .he_twin_V_ce1(grp_legalizeEdge_fu_908_he_twin_V_ce1),
    .he_twin_V_we1(grp_legalizeEdge_fu_908_he_twin_V_we1),
    .he_twin_V_d1(grp_legalizeEdge_fu_908_he_twin_V_d1),
    .he_twin_V_q1(he_twin_V_q1),
    .he_face_V_address0(grp_legalizeEdge_fu_908_he_face_V_address0),
    .he_face_V_ce0(grp_legalizeEdge_fu_908_he_face_V_ce0),
    .he_face_V_we0(grp_legalizeEdge_fu_908_he_face_V_we0),
    .he_face_V_d0(grp_legalizeEdge_fu_908_he_face_V_d0),
    .he_face_V_q0(he_face_V_q0),
    .vertex_x_V_address0(grp_legalizeEdge_fu_908_vertex_x_V_address0),
    .vertex_x_V_ce0(grp_legalizeEdge_fu_908_vertex_x_V_ce0),
    .vertex_x_V_q0(vertex_x_V_q0),
    .vertex_x_V_address1(grp_legalizeEdge_fu_908_vertex_x_V_address1),
    .vertex_x_V_ce1(grp_legalizeEdge_fu_908_vertex_x_V_ce1),
    .vertex_x_V_q1(vertex_x_V_q1),
    .vertex_y_V_address0(grp_legalizeEdge_fu_908_vertex_y_V_address0),
    .vertex_y_V_ce0(grp_legalizeEdge_fu_908_vertex_y_V_ce0),
    .vertex_y_V_q0(vertex_y_V_q0),
    .vertex_y_V_address1(grp_legalizeEdge_fu_908_vertex_y_V_address1),
    .vertex_y_V_ce1(grp_legalizeEdge_fu_908_vertex_y_V_ce1),
    .vertex_y_V_q1(vertex_y_V_q1),
    .freeEdgeCount_i(freeEdgeCount_i),
    .freeEdgeCount_o(grp_legalizeEdge_fu_908_freeEdgeCount_o),
    .freeEdgeCount_o_ap_vld(grp_legalizeEdge_fu_908_freeEdgeCount_o_ap_vld),
    .freeEdges_V_address0(grp_legalizeEdge_fu_908_freeEdges_V_address0),
    .freeEdges_V_ce0(grp_legalizeEdge_fu_908_freeEdges_V_ce0),
    .freeEdges_V_we0(grp_legalizeEdge_fu_908_freeEdges_V_we0),
    .freeEdges_V_d0(grp_legalizeEdge_fu_908_freeEdges_V_d0),
    .freeEdges_V_q0(freeEdges_V_q0),
    .replaceIdx_i(replaceIdx),
    .replaceIdx_o(grp_legalizeEdge_fu_908_replaceIdx_o),
    .replaceIdx_o_ap_vld(grp_legalizeEdge_fu_908_replaceIdx_o_ap_vld),
    .tri_num_V_i(tri_num_V_i),
    .tri_num_V_o(grp_legalizeEdge_fu_908_tri_num_V_o),
    .tri_num_V_o_ap_vld(grp_legalizeEdge_fu_908_tri_num_V_o_ap_vld),
    .face_edge_V_address0(grp_legalizeEdge_fu_908_face_edge_V_address0),
    .face_edge_V_ce0(grp_legalizeEdge_fu_908_face_edge_V_ce0),
    .face_edge_V_we0(grp_legalizeEdge_fu_908_face_edge_V_we0),
    .face_edge_V_d0(grp_legalizeEdge_fu_908_face_edge_V_d0),
    .face_edge_V_q0(face_edge_V_q0),
    .enhanced_grid_grid_size_x(enhanced_grid_grid_size_x),
    .enhanced_grid_x_min_V(enhanced_grid_x_min_V),
    .enhanced_grid_cell_width_V(enhanced_grid_cell_width_V),
    .enhanced_grid_grid_size_y(enhanced_grid_grid_size_y),
    .enhanced_grid_y_min_V(enhanced_grid_y_min_V),
    .enhanced_grid_cell_height_V(enhanced_grid_cell_height_V),
    .enhanced_grid_total_cells(enhanced_grid_total_cells),
    .enhanced_grid_flat_cells_triangle_count_address0(grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangle_count_address0),
    .enhanced_grid_flat_cells_triangle_count_ce0(grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangle_count_ce0),
    .enhanced_grid_flat_cells_triangle_count_we0(grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangle_count_we0),
    .enhanced_grid_flat_cells_triangle_count_d0(grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangle_count_d0),
    .enhanced_grid_flat_cells_triangle_count_q0(enhanced_grid_flat_cells_triangle_count_q0),
    .enhanced_grid_flat_cells_triangles_V_address0(grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangles_V_address0),
    .enhanced_grid_flat_cells_triangles_V_ce0(grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangles_V_ce0),
    .enhanced_grid_flat_cells_triangles_V_we0(grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangles_V_we0),
    .enhanced_grid_flat_cells_triangles_V_d0(grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangles_V_d0),
    .enhanced_grid_flat_cells_triangles_V_q0(enhanced_grid_flat_cells_triangles_V_q0),
    .ap_return(grp_legalizeEdge_fu_908_ap_return)
);

tri2d_compactTriangleIndices grp_compactTriangleIndices_fu_968(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compactTriangleIndices_fu_968_ap_start),
    .ap_done(grp_compactTriangleIndices_fu_968_ap_done),
    .ap_idle(grp_compactTriangleIndices_fu_968_ap_idle),
    .ap_ready(grp_compactTriangleIndices_fu_968_ap_ready),
    .tri_num_V_i(tri_num_V_i),
    .tri_num_V_o(grp_compactTriangleIndices_fu_968_tri_num_V_o),
    .tri_num_V_o_ap_vld(grp_compactTriangleIndices_fu_968_tri_num_V_o_ap_vld),
    .face_used_V_address0(grp_compactTriangleIndices_fu_968_face_used_V_address0),
    .face_used_V_ce0(grp_compactTriangleIndices_fu_968_face_used_V_ce0),
    .face_used_V_we0(grp_compactTriangleIndices_fu_968_face_used_V_we0),
    .face_used_V_d0(grp_compactTriangleIndices_fu_968_face_used_V_d0),
    .face_used_V_q0(face_used_V_q0),
    .face_used_V_address1(grp_compactTriangleIndices_fu_968_face_used_V_address1),
    .face_used_V_ce1(grp_compactTriangleIndices_fu_968_face_used_V_ce1),
    .face_used_V_q1(face_used_V_q1),
    .face_edge_V_address0(grp_compactTriangleIndices_fu_968_face_edge_V_address0),
    .face_edge_V_ce0(grp_compactTriangleIndices_fu_968_face_edge_V_ce0),
    .face_edge_V_we0(grp_compactTriangleIndices_fu_968_face_edge_V_we0),
    .face_edge_V_d0(grp_compactTriangleIndices_fu_968_face_edge_V_d0),
    .face_edge_V_q0(face_edge_V_q0),
    .face_prev_V_address0(grp_compactTriangleIndices_fu_968_face_prev_V_address0),
    .face_prev_V_ce0(grp_compactTriangleIndices_fu_968_face_prev_V_ce0),
    .face_prev_V_we0(grp_compactTriangleIndices_fu_968_face_prev_V_we0),
    .face_prev_V_d0(grp_compactTriangleIndices_fu_968_face_prev_V_d0),
    .face_prev_V_q0(face_prev_V_q0),
    .face_next_V_address0(grp_compactTriangleIndices_fu_968_face_next_V_address0),
    .face_next_V_ce0(grp_compactTriangleIndices_fu_968_face_next_V_ce0),
    .face_next_V_we0(grp_compactTriangleIndices_fu_968_face_next_V_we0),
    .face_next_V_d0(grp_compactTriangleIndices_fu_968_face_next_V_d0),
    .face_next_V_q0(face_next_V_q0),
    .global_edge_idx_V(global_edge_idx_V_i),
    .he_used_V_address0(grp_compactTriangleIndices_fu_968_he_used_V_address0),
    .he_used_V_ce0(grp_compactTriangleIndices_fu_968_he_used_V_ce0),
    .he_used_V_q0(he_used_V_q0),
    .he_face_V_address0(grp_compactTriangleIndices_fu_968_he_face_V_address0),
    .he_face_V_ce0(grp_compactTriangleIndices_fu_968_he_face_V_ce0),
    .he_face_V_we0(grp_compactTriangleIndices_fu_968_he_face_V_we0),
    .he_face_V_d0(grp_compactTriangleIndices_fu_968_he_face_V_d0),
    .he_face_V_address1(grp_compactTriangleIndices_fu_968_he_face_V_address1),
    .he_face_V_ce1(grp_compactTriangleIndices_fu_968_he_face_V_ce1),
    .he_face_V_q1(he_face_V_q1),
    .enhanced_grid_total_cells(enhanced_grid_total_cells),
    .enhanced_grid_flat_cells_triangle_count_address0(grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangle_count_address0),
    .enhanced_grid_flat_cells_triangle_count_ce0(grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangle_count_ce0),
    .enhanced_grid_flat_cells_triangle_count_we0(grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangle_count_we0),
    .enhanced_grid_flat_cells_triangle_count_d0(grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangle_count_d0),
    .enhanced_grid_flat_cells_triangle_count_q0(enhanced_grid_flat_cells_triangle_count_q0),
    .enhanced_grid_flat_cells_triangles_V_address0(grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangles_V_address0),
    .enhanced_grid_flat_cells_triangles_V_ce0(grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangles_V_ce0),
    .enhanced_grid_flat_cells_triangles_V_we0(grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangles_V_we0),
    .enhanced_grid_flat_cells_triangles_V_d0(grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangles_V_d0),
    .enhanced_grid_flat_cells_triangles_V_q0(enhanced_grid_flat_cells_triangles_V_q0)
);

tri2d_srem_11ns_10ns_10_15_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
srem_11ns_10ns_10_15_seq_1_U271(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1122_ap_start),
    .done(grp_fu_1122_ap_done),
    .din0(grp_fu_1122_p0),
    .din1(grp_fu_1122_p1),
    .ce(1'b1),
    .dout(grp_fu_1122_p2)
);

tri2d_srem_11ns_10ns_10_15_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
srem_11ns_10ns_10_15_seq_1_U272(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1164_ap_start),
    .done(grp_fu_1164_ap_done),
    .din0(grp_fu_1164_p0),
    .din1(grp_fu_1164_p1),
    .ce(1'b1),
    .dout(grp_fu_1164_p2)
);

tri2d_srem_11ns_10ns_10_15_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
srem_11ns_10ns_10_15_seq_1_U273(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1217_ap_start),
    .done(grp_fu_1217_ap_done),
    .din0(grp_fu_1217_p0),
    .din1(grp_fu_1217_p1),
    .ce(1'b1),
    .dout(grp_fu_1217_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_allocateHalfEdge_fu_864_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87))) begin
            grp_allocateHalfEdge_fu_864_ap_start_reg <= 1'b1;
        end else if ((grp_allocateHalfEdge_fu_864_ap_ready == 1'b1)) begin
            grp_allocateHalfEdge_fu_864_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_assignTriangleToGrid_fu_873_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state96))) begin
            grp_assignTriangleToGrid_fu_873_ap_start_reg <= 1'b1;
        end else if ((grp_assignTriangleToGrid_fu_873_ap_ready == 1'b1)) begin
            grp_assignTriangleToGrid_fu_873_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compactTriangleIndices_fu_968_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln860_fu_1394_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state108))) begin
            grp_compactTriangleIndices_fu_968_ap_start_reg <= 1'b1;
        end else if ((grp_compactTriangleIndices_fu_968_ap_ready == 1'b1)) begin
            grp_compactTriangleIndices_fu_968_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_legalizeEdge_fu_908_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state106) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state102))) begin
            grp_legalizeEdge_fu_908_ap_start_reg <= 1'b1;
        end else if ((grp_legalizeEdge_fu_908_ap_ready == 1'b1)) begin
            grp_legalizeEdge_fu_908_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln451_1_reg_1537 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        empty_72_reg_835 <= empty_reg_825;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        empty_72_reg_835 <= add_ln452_1_fu_1240_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln451_reg_1528 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        empty_reg_825 <= freeEdgeCount_i;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        empty_reg_825 <= add_ln452_fu_1175_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln860_fu_1394_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state108))) begin
        inserted_point_count_new_0_reg_854 <= add_ln859_fu_1388_p2;
    end else if (((1'b0 == ap_block_state109_on_subcall_done) & (icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        inserted_point_count_new_0_reg_854 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state107_on_subcall_done) & (isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
        newEdgeIdx_V_0_reg_845 <= grp_legalizeEdge_fu_908_ap_return;
    end else if (((grp_assignTriangleToGrid_fu_873_ap_done == 1'b1) & (isFirstPoint_reg_1496 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
        newEdgeIdx_V_0_reg_845 <= reg_1018;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln451_reg_1528 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        replaceIdx <= trunc_ln455_fu_1133_p1;
    end else if (((icmp_ln451_1_reg_1537 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        replaceIdx <= trunc_ln455_1_fu_1186_p1;
    end else if (((icmp_ln451_2_reg_1551 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
        replaceIdx <= trunc_ln455_2_fu_1252_p1;
    end else if ((((grp_legalizeEdge_fu_908_replaceIdx_o_ap_vld == 1'b1) & (isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)) | ((grp_legalizeEdge_fu_908_replaceIdx_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state105)) | ((grp_legalizeEdge_fu_908_replaceIdx_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state103)))) begin
        replaceIdx <= grp_legalizeEdge_fu_908_replaceIdx_o;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        e1_V_reg_1565 <= grp_allocateHalfEdge_fu_864_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        e2_V_12_reg_1454 <= he_twin_V_q0;
        he_tail_V_load_reg_1448 <= he_tail_V_q0;
        orig_e2_V_reg_1431 <= he_next_V_q0;
        zext_ln541_37_reg_1436[14 : 0] <= zext_ln541_37_fu_1060_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        e2_V_13_reg_1519 <= he_twin_V_q0;
        e2_V_reg_1513 <= he_twin_V_q1;
        he_tail_V_load_3_reg_1503 <= he_tail_V_q1;
        he_tail_V_load_4_reg_1508 <= he_tail_V_q0;
        icmp_ln451_reg_1528 <= icmp_ln451_fu_1101_p2;
        isFirstPoint_reg_1496 <= isFirstPoint_fu_1075_p2;
        processed_actual_points <= add_ln710_fu_1081_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        e2_V_14_reg_1574 <= grp_allocateHalfEdge_fu_864_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        e3_V_reg_1583 <= grp_allocateHalfEdge_fu_864_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        e4_V_reg_1591 <= grp_allocateHalfEdge_fu_864_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        e5_V_reg_1600 <= grp_allocateHalfEdge_fu_864_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        e6_V_reg_1609 <= grp_allocateHalfEdge_fu_864_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        e7_V_reg_1617 <= grp_allocateHalfEdge_fu_864_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state88)) begin
        e8_V_reg_1643 <= grp_allocateHalfEdge_fu_864_ap_return_0;
        zext_ln541_41_reg_1638[14 : 0] <= zext_ln541_41_fu_1282_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state90)) begin
        e9_V_reg_1669 <= grp_allocateHalfEdge_fu_864_ap_return_0;
        f2_V_reg_1657 <= tri_num_V_i;
        zext_ln541_44_reg_1664[14 : 0] <= zext_ln541_44_fu_1310_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        f1_V_reg_1626 <= tri_num_V_i;
        zext_ln541_40_reg_1633[14 : 0] <= zext_ln541_40_fu_1274_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        f3_V_reg_1695 <= tri_num_V_i;
        zext_ln541_48_reg_1702[14 : 0] <= zext_ln541_48_fu_1350_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        icmp_ln451_1_reg_1537 <= icmp_ln451_1_fu_1143_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        icmp_ln451_2_reg_1551 <= icmp_ln451_2_fu_1196_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state108)) begin
        icmp_ln860_reg_1717 <= icmp_ln860_fu_1394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        insert_count <= add_ln690_fu_1034_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        orig_e1_V_reg_1411 <= face_edge_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        orig_e3_V_reg_1460 <= he_next_V_q0;
        zext_ln541_38_reg_1470[14 : 0] <= zext_ln541_38_fu_1065_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state86)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state84)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state82)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state80)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state78)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state74)))) begin
        reg_1018 <= grp_allocateHalfEdge_fu_864_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_legalizeEdge_fu_908_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state105)) | ((grp_legalizeEdge_fu_908_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state103)))) begin
        reg_1025 <= grp_legalizeEdge_fu_908_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state89)) begin
        zext_ln541_42_reg_1652[14 : 0] <= zext_ln541_42_fu_1290_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state91)) begin
        zext_ln541_45_reg_1676[14 : 0] <= zext_ln541_45_fu_1318_p1[14 : 0];
        zext_ln541_50_reg_1681[14 : 0] <= zext_ln541_50_fu_1326_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        zext_ln541_46_reg_1690[14 : 0] <= zext_ln541_46_fu_1330_p1[14 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        zext_ln541_49_reg_1707[14 : 0] <= zext_ln541_49_fu_1358_p1[14 : 0];
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

always @ (*) begin
    if ((grp_assignTriangleToGrid_fu_873_ap_done == 1'b0)) begin
        ap_ST_fsm_state101_blk = 1'b1;
    end else begin
        ap_ST_fsm_state101_blk = 1'b0;
    end
end

assign ap_ST_fsm_state102_blk = 1'b0;

always @ (*) begin
    if ((grp_legalizeEdge_fu_908_ap_done == 1'b0)) begin
        ap_ST_fsm_state103_blk = 1'b1;
    end else begin
        ap_ST_fsm_state103_blk = 1'b0;
    end
end

assign ap_ST_fsm_state104_blk = 1'b0;

always @ (*) begin
    if ((grp_legalizeEdge_fu_908_ap_done == 1'b0)) begin
        ap_ST_fsm_state105_blk = 1'b1;
    end else begin
        ap_ST_fsm_state105_blk = 1'b0;
    end
end

assign ap_ST_fsm_state106_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state107_on_subcall_done)) begin
        ap_ST_fsm_state107_blk = 1'b1;
    end else begin
        ap_ST_fsm_state107_blk = 1'b0;
    end
end

assign ap_ST_fsm_state108_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state109_on_subcall_done)) begin
        ap_ST_fsm_state109_blk = 1'b1;
    end else begin
        ap_ST_fsm_state109_blk = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

always @ (*) begin
    if ((grp_allocateHalfEdge_fu_864_ap_done == 1'b0)) begin
        ap_ST_fsm_state74_blk = 1'b1;
    end else begin
        ap_ST_fsm_state74_blk = 1'b0;
    end
end

assign ap_ST_fsm_state75_blk = 1'b0;

always @ (*) begin
    if ((grp_allocateHalfEdge_fu_864_ap_done == 1'b0)) begin
        ap_ST_fsm_state76_blk = 1'b1;
    end else begin
        ap_ST_fsm_state76_blk = 1'b0;
    end
end

assign ap_ST_fsm_state77_blk = 1'b0;

always @ (*) begin
    if ((grp_allocateHalfEdge_fu_864_ap_done == 1'b0)) begin
        ap_ST_fsm_state78_blk = 1'b1;
    end else begin
        ap_ST_fsm_state78_blk = 1'b0;
    end
end

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_allocateHalfEdge_fu_864_ap_done == 1'b0)) begin
        ap_ST_fsm_state80_blk = 1'b1;
    end else begin
        ap_ST_fsm_state80_blk = 1'b0;
    end
end

assign ap_ST_fsm_state81_blk = 1'b0;

always @ (*) begin
    if ((grp_allocateHalfEdge_fu_864_ap_done == 1'b0)) begin
        ap_ST_fsm_state82_blk = 1'b1;
    end else begin
        ap_ST_fsm_state82_blk = 1'b0;
    end
end

assign ap_ST_fsm_state83_blk = 1'b0;

always @ (*) begin
    if ((grp_allocateHalfEdge_fu_864_ap_done == 1'b0)) begin
        ap_ST_fsm_state84_blk = 1'b1;
    end else begin
        ap_ST_fsm_state84_blk = 1'b0;
    end
end

assign ap_ST_fsm_state85_blk = 1'b0;

always @ (*) begin
    if ((grp_allocateHalfEdge_fu_864_ap_done == 1'b0)) begin
        ap_ST_fsm_state86_blk = 1'b1;
    end else begin
        ap_ST_fsm_state86_blk = 1'b0;
    end
end

assign ap_ST_fsm_state87_blk = 1'b0;

always @ (*) begin
    if ((grp_allocateHalfEdge_fu_864_ap_done == 1'b0)) begin
        ap_ST_fsm_state88_blk = 1'b1;
    end else begin
        ap_ST_fsm_state88_blk = 1'b0;
    end
end

assign ap_ST_fsm_state89_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_allocateHalfEdge_fu_864_ap_done == 1'b0)) begin
        ap_ST_fsm_state90_blk = 1'b1;
    end else begin
        ap_ST_fsm_state90_blk = 1'b0;
    end
end

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

always @ (*) begin
    if ((grp_assignTriangleToGrid_fu_873_ap_done == 1'b0)) begin
        ap_ST_fsm_state97_blk = 1'b1;
    end else begin
        ap_ST_fsm_state97_blk = 1'b0;
    end
end

assign ap_ST_fsm_state98_blk = 1'b0;

always @ (*) begin
    if ((grp_assignTriangleToGrid_fu_873_ap_done == 1'b0)) begin
        ap_ST_fsm_state99_blk = 1'b1;
    end else begin
        ap_ST_fsm_state99_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((1'b0 == ap_block_state109_on_subcall_done) & (1'b1 == ap_CS_fsm_state109)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln451_1_reg_1537 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        ap_phi_mux_empty_72_phi_fu_838_p4 = empty_reg_825;
    end else begin
        ap_phi_mux_empty_72_phi_fu_838_p4 = empty_72_reg_835;
    end
end

always @ (*) begin
    if (((icmp_ln451_reg_1528 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_phi_mux_empty_phi_fu_828_p4 = freeEdgeCount_i;
    end else begin
        ap_phi_mux_empty_phi_fu_828_p4 = empty_reg_825;
    end
end

always @ (*) begin
    if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        ap_phi_mux_inserted_point_count_new_0_phi_fu_857_p4 = 32'd0;
    end else begin
        ap_phi_mux_inserted_point_count_new_0_phi_fu_857_p4 = inserted_point_count_new_0_reg_854;
    end
end

always @ (*) begin
    if (((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
        ap_phi_mux_newEdgeIdx_V_0_phi_fu_848_p4 = grp_legalizeEdge_fu_908_ap_return;
    end else begin
        ap_phi_mux_newEdgeIdx_V_0_phi_fu_848_p4 = newEdgeIdx_V_0_reg_845;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state109_on_subcall_done) & (1'b1 == ap_CS_fsm_state109))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln451_reg_1528 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_sig_allocacmp_replaceIdx_load_1 = trunc_ln455_fu_1133_p1;
    end else begin
        ap_sig_allocacmp_replaceIdx_load_1 = replaceIdx;
    end
end

always @ (*) begin
    if (((icmp_ln451_1_reg_1537 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        ap_sig_allocacmp_replaceIdx_load_2 = trunc_ln455_1_fu_1186_p1;
    end else begin
        ap_sig_allocacmp_replaceIdx_load_2 = replaceIdx;
    end
end

always @ (*) begin
    if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        enhanced_grid_flat_cells_triangle_count_address0 = grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangle_count_address0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        enhanced_grid_flat_cells_triangle_count_address0 = grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangle_count_address0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        enhanced_grid_flat_cells_triangle_count_address0 = grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangle_count_address0;
    end else begin
        enhanced_grid_flat_cells_triangle_count_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        enhanced_grid_flat_cells_triangle_count_ce0 = grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangle_count_ce0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        enhanced_grid_flat_cells_triangle_count_ce0 = grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangle_count_ce0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        enhanced_grid_flat_cells_triangle_count_ce0 = grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangle_count_ce0;
    end else begin
        enhanced_grid_flat_cells_triangle_count_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        enhanced_grid_flat_cells_triangle_count_d0 = grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangle_count_d0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        enhanced_grid_flat_cells_triangle_count_d0 = grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangle_count_d0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        enhanced_grid_flat_cells_triangle_count_d0 = grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangle_count_d0;
    end else begin
        enhanced_grid_flat_cells_triangle_count_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        enhanced_grid_flat_cells_triangle_count_we0 = grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangle_count_we0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        enhanced_grid_flat_cells_triangle_count_we0 = grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangle_count_we0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        enhanced_grid_flat_cells_triangle_count_we0 = grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangle_count_we0;
    end else begin
        enhanced_grid_flat_cells_triangle_count_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        enhanced_grid_flat_cells_triangles_V_address0 = grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangles_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        enhanced_grid_flat_cells_triangles_V_address0 = grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangles_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        enhanced_grid_flat_cells_triangles_V_address0 = grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangles_V_address0;
    end else begin
        enhanced_grid_flat_cells_triangles_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        enhanced_grid_flat_cells_triangles_V_ce0 = grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangles_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        enhanced_grid_flat_cells_triangles_V_ce0 = grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangles_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        enhanced_grid_flat_cells_triangles_V_ce0 = grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangles_V_ce0;
    end else begin
        enhanced_grid_flat_cells_triangles_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        enhanced_grid_flat_cells_triangles_V_d0 = grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangles_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        enhanced_grid_flat_cells_triangles_V_d0 = grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangles_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        enhanced_grid_flat_cells_triangles_V_d0 = grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangles_V_d0;
    end else begin
        enhanced_grid_flat_cells_triangles_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        enhanced_grid_flat_cells_triangles_V_we0 = grp_compactTriangleIndices_fu_968_enhanced_grid_flat_cells_triangles_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        enhanced_grid_flat_cells_triangles_V_we0 = grp_legalizeEdge_fu_908_enhanced_grid_flat_cells_triangles_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        enhanced_grid_flat_cells_triangles_V_we0 = grp_assignTriangleToGrid_fu_873_enhanced_grid_flat_cells_triangles_V_we0;
    end else begin
        enhanced_grid_flat_cells_triangles_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        face_edge_V_address0 = zext_ln541_47_fu_1344_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        face_edge_V_address0 = zext_ln541_43_fu_1304_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        face_edge_V_address0 = zext_ln541_39_fu_1268_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        face_edge_V_address0 = zext_ln541_fu_1046_p1;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        face_edge_V_address0 = grp_compactTriangleIndices_fu_968_face_edge_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        face_edge_V_address0 = grp_legalizeEdge_fu_908_face_edge_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        face_edge_V_address0 = grp_assignTriangleToGrid_fu_873_face_edge_V_address0;
    end else begin
        face_edge_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state87) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        face_edge_V_ce0 = 1'b1;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        face_edge_V_ce0 = grp_compactTriangleIndices_fu_968_face_edge_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        face_edge_V_ce0 = grp_legalizeEdge_fu_908_face_edge_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        face_edge_V_ce0 = grp_assignTriangleToGrid_fu_873_face_edge_V_ce0;
    end else begin
        face_edge_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        face_edge_V_d0 = e7_V_reg_1617;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        face_edge_V_d0 = e4_V_reg_1591;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        face_edge_V_d0 = e1_V_reg_1565;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        face_edge_V_d0 = grp_compactTriangleIndices_fu_968_face_edge_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        face_edge_V_d0 = grp_legalizeEdge_fu_908_face_edge_V_d0;
    end else begin
        face_edge_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state87) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)))) begin
        face_edge_V_we0 = 1'b1;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        face_edge_V_we0 = grp_compactTriangleIndices_fu_968_face_edge_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        face_edge_V_we0 = grp_legalizeEdge_fu_908_face_edge_V_we0;
    end else begin
        face_edge_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        face_used_V_address0 = zext_ln541_47_fu_1344_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        face_used_V_address0 = zext_ln541_43_fu_1304_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        face_used_V_address0 = zext_ln541_39_fu_1268_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        face_used_V_address0 = zext_ln541_fu_1046_p1;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        face_used_V_address0 = grp_compactTriangleIndices_fu_968_face_used_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        face_used_V_address0 = grp_legalizeEdge_fu_908_face_used_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        face_used_V_address0 = grp_assignTriangleToGrid_fu_873_face_used_V_address0;
    end else begin
        face_used_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state87) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        face_used_V_ce0 = 1'b1;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        face_used_V_ce0 = grp_compactTriangleIndices_fu_968_face_used_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        face_used_V_ce0 = grp_legalizeEdge_fu_908_face_used_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        face_used_V_ce0 = grp_assignTriangleToGrid_fu_873_face_used_V_ce0;
    end else begin
        face_used_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        face_used_V_ce1 = grp_compactTriangleIndices_fu_968_face_used_V_ce1;
    end else begin
        face_used_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state90))) begin
        face_used_V_d0 = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        face_used_V_d0 = 1'd0;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        face_used_V_d0 = grp_compactTriangleIndices_fu_968_face_used_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        face_used_V_d0 = grp_legalizeEdge_fu_908_face_used_V_d0;
    end else begin
        face_used_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state87) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        face_used_V_we0 = 1'b1;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        face_used_V_we0 = grp_compactTriangleIndices_fu_968_face_used_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        face_used_V_we0 = grp_legalizeEdge_fu_908_face_used_V_we0;
    end else begin
        face_used_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        freeEdgeCount_o = add_ln452_fu_1175_p2;
    end else if (((icmp_ln451_2_fu_1196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        freeEdgeCount_o = add_ln452_2_fu_1223_p2;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        freeEdgeCount_o = add_ln452_1_fu_1240_p2;
    end else if ((((grp_legalizeEdge_fu_908_freeEdgeCount_o_ap_vld == 1'b1) & (isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)) | ((grp_legalizeEdge_fu_908_freeEdgeCount_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state105)) | ((grp_legalizeEdge_fu_908_freeEdgeCount_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state103)))) begin
        freeEdgeCount_o = grp_legalizeEdge_fu_908_freeEdgeCount_o;
    end else if ((((grp_allocateHalfEdge_fu_864_freeEdgeCount_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_allocateHalfEdge_fu_864_freeEdgeCount_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state88)) | ((grp_allocateHalfEdge_fu_864_freeEdgeCount_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state86)) | ((grp_allocateHalfEdge_fu_864_freeEdgeCount_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state84)) | ((grp_allocateHalfEdge_fu_864_freeEdgeCount_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state82)) | ((grp_allocateHalfEdge_fu_864_freeEdgeCount_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state80)) | ((grp_allocateHalfEdge_fu_864_freeEdgeCount_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state78)) | ((grp_allocateHalfEdge_fu_864_freeEdgeCount_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state76)) | ((grp_allocateHalfEdge_fu_864_freeEdgeCount_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state74)))) begin
        freeEdgeCount_o = grp_allocateHalfEdge_fu_864_freeEdgeCount_o;
    end else begin
        freeEdgeCount_o = freeEdgeCount_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state32) | ((icmp_ln451_2_fu_1196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46)))) begin
        freeEdgeCount_o_ap_vld = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        freeEdgeCount_o_ap_vld = grp_legalizeEdge_fu_908_freeEdgeCount_o_ap_vld;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state74))) begin
        freeEdgeCount_o_ap_vld = grp_allocateHalfEdge_fu_864_freeEdgeCount_o_ap_vld;
    end else begin
        freeEdgeCount_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln451_2_fu_1196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        freeEdges_V_address0 = zext_ln452_2_fu_1235_p1;
    end else if (((icmp_ln451_2_fu_1196_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        freeEdges_V_address0 = zext_ln454_2_fu_1206_p1;
    end else if (((icmp_ln451_1_fu_1143_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        freeEdges_V_address0 = zext_ln452_1_fu_1170_p1;
    end else if (((icmp_ln451_1_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        freeEdges_V_address0 = zext_ln454_1_fu_1153_p1;
    end else if (((icmp_ln451_fu_1101_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        freeEdges_V_address0 = zext_ln452_fu_1128_p1;
    end else if (((icmp_ln451_fu_1101_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        freeEdges_V_address0 = zext_ln454_fu_1111_p1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        freeEdges_V_address0 = grp_legalizeEdge_fu_908_freeEdges_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state74))) begin
        freeEdges_V_address0 = grp_allocateHalfEdge_fu_864_freeEdges_V_address0;
    end else begin
        freeEdges_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln451_fu_1101_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln451_2_fu_1196_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46)) | ((icmp_ln451_1_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19)) | ((icmp_ln451_fu_1101_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln451_2_fu_1196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46)) | ((icmp_ln451_1_fu_1143_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19)))) begin
        freeEdges_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        freeEdges_V_ce0 = grp_legalizeEdge_fu_908_freeEdges_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state74))) begin
        freeEdges_V_ce0 = grp_allocateHalfEdge_fu_864_freeEdges_V_ce0;
    end else begin
        freeEdges_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln451_2_fu_1196_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46)) | ((icmp_ln451_2_fu_1196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46)))) begin
        freeEdges_V_d0 = orig_e3_V_reg_1460;
    end else if ((((icmp_ln451_1_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19)) | ((icmp_ln451_1_fu_1143_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19)))) begin
        freeEdges_V_d0 = orig_e2_V_reg_1431;
    end else if ((((icmp_ln451_fu_1101_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln451_fu_1101_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        freeEdges_V_d0 = orig_e1_V_reg_1411;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        freeEdges_V_d0 = grp_legalizeEdge_fu_908_freeEdges_V_d0;
    end else begin
        freeEdges_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln451_fu_1101_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln451_2_fu_1196_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46)) | ((icmp_ln451_1_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19)) | ((icmp_ln451_fu_1101_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((icmp_ln451_2_fu_1196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46)) | ((icmp_ln451_1_fu_1143_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19)))) begin
        freeEdges_V_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        freeEdges_V_we0 = grp_legalizeEdge_fu_908_freeEdges_V_we0;
    end else begin
        freeEdges_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state107)) begin
        global_edge_idx_V_o = ap_phi_mux_newEdgeIdx_V_0_phi_fu_848_p4;
    end else begin
        global_edge_idx_V_o = global_edge_idx_V_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state107_on_subcall_done) & (1'b1 == ap_CS_fsm_state107))) begin
        global_edge_idx_V_o_ap_vld = 1'b1;
    end else begin
        global_edge_idx_V_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state76))) begin
        grp_allocateHalfEdge_fu_864_newEdgeIdx_V_read = reg_1018;
    end else if ((1'b1 == ap_CS_fsm_state74)) begin
        grp_allocateHalfEdge_fu_864_newEdgeIdx_V_read = global_edge_idx_V_i;
    end else begin
        grp_allocateHalfEdge_fu_864_newEdgeIdx_V_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        grp_assignTriangleToGrid_fu_873_triangleIdx = f3_V_reg_1695;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        grp_assignTriangleToGrid_fu_873_triangleIdx = f2_V_reg_1657;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        grp_assignTriangleToGrid_fu_873_triangleIdx = f1_V_reg_1626;
    end else begin
        grp_assignTriangleToGrid_fu_873_triangleIdx = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln451_fu_1101_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_1122_ap_start = 1'b1;
    end else begin
        grp_fu_1122_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln451_1_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        grp_fu_1164_ap_start = 1'b1;
    end else begin
        grp_fu_1164_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln451_2_fu_1196_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        grp_fu_1217_ap_start = 1'b1;
    end else begin
        grp_fu_1217_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
        grp_legalizeEdge_fu_908_edgeIdx = e8_V_reg_1643;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_legalizeEdge_fu_908_edgeIdx = e5_V_reg_1600;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_legalizeEdge_fu_908_edgeIdx = e2_V_14_reg_1574;
    end else begin
        grp_legalizeEdge_fu_908_edgeIdx = 'bx;
    end
end

always @ (*) begin
    if (((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107))) begin
        grp_legalizeEdge_fu_908_faceIdx = f3_V_reg_1695;
    end else if ((1'b1 == ap_CS_fsm_state105)) begin
        grp_legalizeEdge_fu_908_faceIdx = f2_V_reg_1657;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_legalizeEdge_fu_908_faceIdx = f1_V_reg_1626;
    end else begin
        grp_legalizeEdge_fu_908_faceIdx = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state105) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        grp_legalizeEdge_fu_908_newEdgeIdx_V_read = reg_1025;
    end else if ((1'b1 == ap_CS_fsm_state103)) begin
        grp_legalizeEdge_fu_908_newEdgeIdx_V_read = reg_1018;
    end else begin
        grp_legalizeEdge_fu_908_newEdgeIdx_V_read = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln451_2_fu_1196_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        grp_load_fu_994_p1 = ap_sig_allocacmp_replaceIdx_load_2;
    end else if (((icmp_ln451_1_fu_1143_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        grp_load_fu_994_p1 = ap_sig_allocacmp_replaceIdx_load_1;
    end else if (((icmp_ln451_fu_1101_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        grp_load_fu_994_p1 = replaceIdx;
    end else begin
        grp_load_fu_994_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        he_face_V_address0 = zext_ln541_50_reg_1681;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        he_face_V_address0 = zext_ln541_49_fu_1358_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        he_face_V_address0 = zext_ln541_48_fu_1350_p1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        he_face_V_address0 = zext_ln541_46_fu_1330_p1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        he_face_V_address0 = zext_ln541_45_fu_1318_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        he_face_V_address0 = zext_ln541_44_fu_1310_p1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        he_face_V_address0 = zext_ln541_42_fu_1290_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        he_face_V_address0 = zext_ln541_41_fu_1282_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        he_face_V_address0 = zext_ln541_40_fu_1274_p1;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        he_face_V_address0 = grp_compactTriangleIndices_fu_968_he_face_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_face_V_address0 = grp_legalizeEdge_fu_908_he_face_V_address0;
    end else begin
        he_face_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state95) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88)))) begin
        he_face_V_ce0 = 1'b1;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        he_face_V_ce0 = grp_compactTriangleIndices_fu_968_he_face_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_face_V_ce0 = grp_legalizeEdge_fu_908_he_face_V_ce0;
    end else begin
        he_face_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        he_face_V_ce1 = grp_compactTriangleIndices_fu_968_he_face_V_ce1;
    end else begin
        he_face_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state95))) begin
        he_face_V_d0 = f3_V_reg_1695;
    end else if (((1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91))) begin
        he_face_V_d0 = f2_V_reg_1657;
    end else if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state88))) begin
        he_face_V_d0 = f1_V_reg_1626;
    end else if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state90))) begin
        he_face_V_d0 = tri_num_V_i;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        he_face_V_d0 = grp_compactTriangleIndices_fu_968_he_face_V_d0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_face_V_d0 = grp_legalizeEdge_fu_908_he_face_V_d0;
    end else begin
        he_face_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state95) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88)))) begin
        he_face_V_we0 = 1'b1;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        he_face_V_we0 = grp_compactTriangleIndices_fu_968_he_face_V_we0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_face_V_we0 = grp_legalizeEdge_fu_908_he_face_V_we0;
    end else begin
        he_face_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        he_next_V_address0 = zext_ln541_50_reg_1681;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        he_next_V_address0 = zext_ln541_49_fu_1358_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        he_next_V_address0 = zext_ln541_48_fu_1350_p1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        he_next_V_address0 = zext_ln541_46_fu_1330_p1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        he_next_V_address0 = zext_ln541_45_fu_1318_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        he_next_V_address0 = zext_ln541_44_fu_1310_p1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        he_next_V_address0 = zext_ln541_42_fu_1290_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        he_next_V_address0 = zext_ln541_41_fu_1282_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        he_next_V_address0 = zext_ln541_40_fu_1274_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        he_next_V_address0 = zext_ln541_37_fu_1060_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        he_next_V_address0 = zext_ln541_36_fu_1052_p1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_next_V_address0 = grp_legalizeEdge_fu_908_he_next_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        he_next_V_address0 = grp_assignTriangleToGrid_fu_873_he_next_V_address0;
    end else begin
        he_next_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state95) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88)))) begin
        he_next_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_next_V_ce0 = grp_legalizeEdge_fu_908_he_next_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        he_next_V_ce0 = grp_assignTriangleToGrid_fu_873_he_next_V_ce0;
    end else begin
        he_next_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        he_next_V_d0 = e7_V_reg_1617;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        he_next_V_d0 = e9_V_reg_1669;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        he_next_V_d0 = e8_V_reg_1643;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        he_next_V_d0 = e4_V_reg_1591;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        he_next_V_d0 = e6_V_reg_1609;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        he_next_V_d0 = e5_V_reg_1600;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        he_next_V_d0 = e1_V_reg_1565;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        he_next_V_d0 = e3_V_reg_1583;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        he_next_V_d0 = e2_V_14_reg_1574;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_next_V_d0 = grp_legalizeEdge_fu_908_he_next_V_d0;
    end else begin
        he_next_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state95) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88)))) begin
        he_next_V_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_next_V_we0 = grp_legalizeEdge_fu_908_he_next_V_we0;
    end else begin
        he_next_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        he_prev_V_address0 = zext_ln541_50_reg_1681;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        he_prev_V_address0 = zext_ln541_49_fu_1358_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        he_prev_V_address0 = zext_ln541_48_fu_1350_p1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        he_prev_V_address0 = zext_ln541_46_fu_1330_p1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        he_prev_V_address0 = zext_ln541_45_fu_1318_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        he_prev_V_address0 = zext_ln541_44_fu_1310_p1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        he_prev_V_address0 = zext_ln541_42_fu_1290_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        he_prev_V_address0 = zext_ln541_41_fu_1282_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        he_prev_V_address0 = zext_ln541_40_fu_1274_p1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_prev_V_address0 = grp_legalizeEdge_fu_908_he_prev_V_address0;
    end else begin
        he_prev_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state95) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88)))) begin
        he_prev_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_prev_V_ce0 = grp_legalizeEdge_fu_908_he_prev_V_ce0;
    end else begin
        he_prev_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        he_prev_V_d0 = e8_V_reg_1643;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        he_prev_V_d0 = e7_V_reg_1617;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        he_prev_V_d0 = e9_V_reg_1669;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        he_prev_V_d0 = e5_V_reg_1600;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        he_prev_V_d0 = e4_V_reg_1591;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        he_prev_V_d0 = e6_V_reg_1609;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        he_prev_V_d0 = e2_V_14_reg_1574;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        he_prev_V_d0 = e1_V_reg_1565;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        he_prev_V_d0 = e3_V_reg_1583;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_prev_V_d0 = grp_legalizeEdge_fu_908_he_prev_V_d0;
    end else begin
        he_prev_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state95) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88)))) begin
        he_prev_V_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_prev_V_we0 = grp_legalizeEdge_fu_908_he_prev_V_we0;
    end else begin
        he_prev_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state94)) begin
        he_tail_V_address0 = zext_ln541_49_fu_1358_p1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        he_tail_V_address0 = zext_ln541_46_fu_1330_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        he_tail_V_address0 = zext_ln541_44_fu_1310_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        he_tail_V_address0 = zext_ln541_41_fu_1282_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        he_tail_V_address0 = zext_ln541_38_fu_1065_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        he_tail_V_address0 = zext_ln541_36_fu_1052_p1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_tail_V_address0 = grp_legalizeEdge_fu_908_he_tail_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        he_tail_V_address0 = grp_assignTriangleToGrid_fu_873_he_tail_V_address0;
    end else begin
        he_tail_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        he_tail_V_address1 = zext_ln541_50_reg_1681;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        he_tail_V_address1 = zext_ln541_48_fu_1350_p1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        he_tail_V_address1 = zext_ln541_45_fu_1318_p1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        he_tail_V_address1 = zext_ln541_42_fu_1290_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        he_tail_V_address1 = zext_ln541_40_fu_1274_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        he_tail_V_address1 = zext_ln541_37_reg_1436;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_tail_V_address1 = grp_legalizeEdge_fu_908_he_tail_V_address1;
    end else begin
        he_tail_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88)))) begin
        he_tail_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_tail_V_ce0 = grp_legalizeEdge_fu_908_he_tail_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        he_tail_V_ce0 = grp_assignTriangleToGrid_fu_873_he_tail_V_ce0;
    end else begin
        he_tail_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state95))) begin
        he_tail_V_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_tail_V_ce1 = grp_legalizeEdge_fu_908_he_tail_V_ce1;
    end else begin
        he_tail_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state92))) begin
        he_tail_V_d0 = he_tail_V_load_4_reg_1508;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        he_tail_V_d0 = p;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        he_tail_V_d0 = he_tail_V_load_reg_1448;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_tail_V_d0 = grp_legalizeEdge_fu_908_he_tail_V_d0;
    end else begin
        he_tail_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        he_tail_V_d1 = he_tail_V_load_reg_1448;
    end else if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89))) begin
        he_tail_V_d1 = he_tail_V_load_3_reg_1503;
    end else if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state87))) begin
        he_tail_V_d1 = p;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_tail_V_d1 = grp_legalizeEdge_fu_908_he_tail_V_d1;
    end else begin
        he_tail_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state92) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88)))) begin
        he_tail_V_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_tail_V_we0 = grp_legalizeEdge_fu_908_he_tail_V_we0;
    end else begin
        he_tail_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state95))) begin
        he_tail_V_we1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_tail_V_we1 = grp_legalizeEdge_fu_908_he_tail_V_we1;
    end else begin
        he_tail_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        he_twin_V_address0 = zext_ln541_53_fu_1374_p1;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        he_twin_V_address0 = zext_ln541_52_fu_1370_p1;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        he_twin_V_address0 = zext_ln541_51_fu_1366_p1;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        he_twin_V_address0 = zext_ln541_46_reg_1690;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        he_twin_V_address0 = zext_ln541_42_reg_1652;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        he_twin_V_address0 = zext_ln541_50_fu_1326_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        he_twin_V_address0 = zext_ln541_38_fu_1065_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        he_twin_V_address0 = zext_ln541_36_fu_1052_p1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_twin_V_address0 = grp_legalizeEdge_fu_908_he_twin_V_address0;
    end else begin
        he_twin_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        he_twin_V_address1 = zext_ln541_49_reg_1707;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        he_twin_V_address1 = zext_ln541_45_reg_1676;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        he_twin_V_address1 = zext_ln541_41_reg_1638;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        he_twin_V_address1 = zext_ln541_48_reg_1702;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        he_twin_V_address1 = zext_ln541_44_reg_1664;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        he_twin_V_address1 = zext_ln541_40_reg_1633;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        he_twin_V_address1 = zext_ln541_37_reg_1436;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_twin_V_address1 = grp_legalizeEdge_fu_908_he_twin_V_address1;
    end else begin
        he_twin_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state95) | ((grp_assignTriangleToGrid_fu_873_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state99)) | ((grp_assignTriangleToGrid_fu_873_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state97)) | ((grp_assignTriangleToGrid_fu_873_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state101)))) begin
        he_twin_V_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_twin_V_ce0 = grp_legalizeEdge_fu_908_he_twin_V_ce0;
    end else begin
        he_twin_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state4) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)))) begin
        he_twin_V_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_twin_V_ce1 = grp_legalizeEdge_fu_908_he_twin_V_ce1;
    end else begin
        he_twin_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state101)) begin
        he_twin_V_d0 = e8_V_reg_1643;
    end else if ((1'b1 == ap_CS_fsm_state99)) begin
        he_twin_V_d0 = e5_V_reg_1600;
    end else if ((1'b1 == ap_CS_fsm_state97)) begin
        he_twin_V_d0 = e2_V_14_reg_1574;
    end else if ((1'b1 == ap_CS_fsm_state95)) begin
        he_twin_V_d0 = e7_V_reg_1617;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        he_twin_V_d0 = e4_V_reg_1591;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        he_twin_V_d0 = e1_V_reg_1565;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_twin_V_d0 = grp_legalizeEdge_fu_908_he_twin_V_d0;
    end else begin
        he_twin_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        he_twin_V_d1 = e2_V_13_reg_1519;
    end else if ((1'b1 == ap_CS_fsm_state98)) begin
        he_twin_V_d1 = e2_V_reg_1513;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        he_twin_V_d1 = e2_V_12_reg_1454;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        he_twin_V_d1 = e6_V_reg_1609;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        he_twin_V_d1 = e3_V_reg_1583;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        he_twin_V_d1 = grp_allocateHalfEdge_fu_864_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_twin_V_d1 = grp_legalizeEdge_fu_908_he_twin_V_d1;
    end else begin
        he_twin_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state95) | ((grp_assignTriangleToGrid_fu_873_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state99)) | ((grp_assignTriangleToGrid_fu_873_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state97)) | ((grp_assignTriangleToGrid_fu_873_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state101)))) begin
        he_twin_V_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_twin_V_we0 = grp_legalizeEdge_fu_908_he_twin_V_we0;
    end else begin
        he_twin_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state96) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state92) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)))) begin
        he_twin_V_we1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_twin_V_we1 = grp_legalizeEdge_fu_908_he_twin_V_we1;
    end else begin
        he_twin_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        he_used_V_address0 = zext_ln541_50_reg_1681;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        he_used_V_address0 = zext_ln541_49_fu_1358_p1;
    end else if ((1'b1 == ap_CS_fsm_state93)) begin
        he_used_V_address0 = zext_ln541_48_fu_1350_p1;
    end else if ((1'b1 == ap_CS_fsm_state92)) begin
        he_used_V_address0 = zext_ln541_46_fu_1330_p1;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        he_used_V_address0 = zext_ln541_45_fu_1318_p1;
    end else if ((1'b1 == ap_CS_fsm_state90)) begin
        he_used_V_address0 = zext_ln541_44_fu_1310_p1;
    end else if ((1'b1 == ap_CS_fsm_state89)) begin
        he_used_V_address0 = zext_ln541_42_fu_1290_p1;
    end else if ((1'b1 == ap_CS_fsm_state88)) begin
        he_used_V_address0 = zext_ln541_41_fu_1282_p1;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        he_used_V_address0 = zext_ln541_40_fu_1274_p1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        he_used_V_address0 = zext_ln541_38_reg_1470;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        he_used_V_address0 = zext_ln541_37_reg_1436;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        he_used_V_address0 = zext_ln541_36_fu_1052_p1;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        he_used_V_address0 = grp_compactTriangleIndices_fu_968_he_used_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_used_V_address0 = grp_legalizeEdge_fu_908_he_used_V_address0;
    end else begin
        he_used_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state95) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88)))) begin
        he_used_V_ce0 = 1'b1;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        he_used_V_ce0 = grp_compactTriangleIndices_fu_968_he_used_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_used_V_ce0 = grp_legalizeEdge_fu_908_he_used_V_ce0;
    end else begin
        he_used_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state95))) begin
        he_used_V_d0 = 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state2))) begin
        he_used_V_d0 = 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_used_V_d0 = grp_legalizeEdge_fu_908_he_used_V_d0;
    end else begin
        he_used_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state92) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state95) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88)))) begin
        he_used_V_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        he_used_V_we0 = grp_legalizeEdge_fu_908_he_used_V_we0;
    end else begin
        he_used_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        inserted_point_count_o = ap_phi_mux_inserted_point_count_new_0_phi_fu_857_p4;
    end else begin
        inserted_point_count_o = inserted_point_count_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state109_on_subcall_done) & (1'b1 == ap_CS_fsm_state109))) begin
        inserted_point_count_o_ap_vld = 1'b1;
    end else begin
        inserted_point_count_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state87) | (1'b1 == ap_CS_fsm_state90))) begin
        tri_num_V_o = grp_fu_1012_p2;
    end else if (((grp_compactTriangleIndices_fu_968_tri_num_V_o_ap_vld == 1'b1) & (icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        tri_num_V_o = grp_compactTriangleIndices_fu_968_tri_num_V_o;
    end else if ((((grp_legalizeEdge_fu_908_tri_num_V_o_ap_vld == 1'b1) & (isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)) | ((grp_legalizeEdge_fu_908_tri_num_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state105)) | ((grp_legalizeEdge_fu_908_tri_num_V_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state103)))) begin
        tri_num_V_o = grp_legalizeEdge_fu_908_tri_num_V_o;
    end else begin
        tri_num_V_o = tri_num_V_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state87) | ((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90)))) begin
        tri_num_V_o_ap_vld = 1'b1;
    end else if (((icmp_ln860_reg_1717 == 1'd1) & (1'b1 == ap_CS_fsm_state109))) begin
        tri_num_V_o_ap_vld = grp_compactTriangleIndices_fu_968_tri_num_V_o_ap_vld;
    end else if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        tri_num_V_o_ap_vld = grp_legalizeEdge_fu_908_tri_num_V_o_ap_vld;
    end else begin
        tri_num_V_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        vertex_x_V_address0 = grp_legalizeEdge_fu_908_vertex_x_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        vertex_x_V_address0 = grp_assignTriangleToGrid_fu_873_vertex_x_V_address0;
    end else begin
        vertex_x_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        vertex_x_V_address1 = grp_legalizeEdge_fu_908_vertex_x_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        vertex_x_V_address1 = grp_assignTriangleToGrid_fu_873_vertex_x_V_address1;
    end else begin
        vertex_x_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        vertex_x_V_ce0 = grp_legalizeEdge_fu_908_vertex_x_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        vertex_x_V_ce0 = grp_assignTriangleToGrid_fu_873_vertex_x_V_ce0;
    end else begin
        vertex_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        vertex_x_V_ce1 = grp_legalizeEdge_fu_908_vertex_x_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        vertex_x_V_ce1 = grp_assignTriangleToGrid_fu_873_vertex_x_V_ce1;
    end else begin
        vertex_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        vertex_y_V_address0 = grp_legalizeEdge_fu_908_vertex_y_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        vertex_y_V_address0 = grp_assignTriangleToGrid_fu_873_vertex_y_V_address0;
    end else begin
        vertex_y_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        vertex_y_V_address1 = grp_legalizeEdge_fu_908_vertex_y_V_address1;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        vertex_y_V_address1 = grp_assignTriangleToGrid_fu_873_vertex_y_V_address1;
    end else begin
        vertex_y_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        vertex_y_V_ce0 = grp_legalizeEdge_fu_908_vertex_y_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        vertex_y_V_ce0 = grp_assignTriangleToGrid_fu_873_vertex_y_V_ce0;
    end else begin
        vertex_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state105) | (1'b1 == ap_CS_fsm_state103) | ((isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state107)))) begin
        vertex_y_V_ce1 = grp_legalizeEdge_fu_908_vertex_y_V_ce1;
    end else if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state97) | (1'b1 == ap_CS_fsm_state101))) begin
        vertex_y_V_ce1 = grp_assignTriangleToGrid_fu_873_vertex_y_V_ce1;
    end else begin
        vertex_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln451_fu_1101_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln451_1_fu_1143_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            if (((icmp_ln451_2_fu_1196_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state74))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state76))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            if (((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state78))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            if (((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state80))) begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            if (((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state82))) begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            if (((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            if (((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state86))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            if (((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state88))) begin
                ap_NS_fsm = ap_ST_fsm_state89;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state88;
            end
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            if (((grp_allocateHalfEdge_fu_864_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state90))) begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state90;
            end
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            if (((grp_assignTriangleToGrid_fu_873_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state97))) begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            if (((grp_assignTriangleToGrid_fu_873_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state99))) begin
                ap_NS_fsm = ap_ST_fsm_state100;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            if (((grp_assignTriangleToGrid_fu_873_ap_done == 1'b1) & (isFirstPoint_reg_1496 == 1'd1) & (1'b1 == ap_CS_fsm_state101))) begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end else if (((grp_assignTriangleToGrid_fu_873_ap_done == 1'b1) & (isFirstPoint_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_state101))) begin
                ap_NS_fsm = ap_ST_fsm_state102;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state101;
            end
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            if (((grp_legalizeEdge_fu_908_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state103))) begin
                ap_NS_fsm = ap_ST_fsm_state104;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            if (((grp_legalizeEdge_fu_908_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state105))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state105;
            end
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            if (((1'b0 == ap_block_state107_on_subcall_done) & (1'b1 == ap_CS_fsm_state107))) begin
                ap_NS_fsm = ap_ST_fsm_state108;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            if (((1'b0 == ap_block_state109_on_subcall_done) & (1'b1 == ap_CS_fsm_state109))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state109;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln452_1_fu_1240_p2 = (empty_reg_825 + 32'd1);

assign add_ln452_2_fu_1223_p2 = (ap_phi_mux_empty_72_phi_fu_838_p4 + 32'd1);

assign add_ln452_fu_1175_p2 = (freeEdgeCount_i + 32'd1);

assign add_ln690_fu_1034_p2 = (insert_count + 32'd1);

assign add_ln710_fu_1081_p2 = (processed_actual_points + 32'd1);

assign add_ln859_fu_1388_p2 = (inserted_point_count_i + 32'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state101 = ap_CS_fsm[32'd100];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state105 = ap_CS_fsm[32'd104];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd105];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd106];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

always @ (*) begin
    ap_block_state107_on_subcall_done = ((isFirstPoint_reg_1496 == 1'd0) & (grp_legalizeEdge_fu_908_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state109_on_subcall_done = ((grp_compactTriangleIndices_fu_968_ap_done == 1'b0) & (icmp_ln860_reg_1717 == 1'd1));
end

assign face_next_V_address0 = grp_compactTriangleIndices_fu_968_face_next_V_address0;

assign face_next_V_ce0 = grp_compactTriangleIndices_fu_968_face_next_V_ce0;

assign face_next_V_d0 = grp_compactTriangleIndices_fu_968_face_next_V_d0;

assign face_next_V_we0 = grp_compactTriangleIndices_fu_968_face_next_V_we0;

assign face_prev_V_address0 = grp_compactTriangleIndices_fu_968_face_prev_V_address0;

assign face_prev_V_ce0 = grp_compactTriangleIndices_fu_968_face_prev_V_ce0;

assign face_prev_V_d0 = grp_compactTriangleIndices_fu_968_face_prev_V_d0;

assign face_prev_V_we0 = grp_compactTriangleIndices_fu_968_face_prev_V_we0;

assign face_used_V_address1 = grp_compactTriangleIndices_fu_968_face_used_V_address1;

assign grp_allocateHalfEdge_fu_864_ap_start = grp_allocateHalfEdge_fu_864_ap_start_reg;

assign grp_assignTriangleToGrid_fu_873_ap_start = grp_assignTriangleToGrid_fu_873_ap_start_reg;

assign grp_compactTriangleIndices_fu_968_ap_start = grp_compactTriangleIndices_fu_968_ap_start_reg;

assign grp_fu_1012_p2 = (tri_num_V_i + 14'd1);

assign grp_fu_1122_p0 = ($signed(sext_ln454_1_fu_1107_p1) + $signed(11'd1));

assign grp_fu_1122_p1 = 11'd480;

assign grp_fu_1164_p0 = ($signed(sext_ln454_fu_1149_p1) + $signed(11'd1));

assign grp_fu_1164_p1 = 11'd480;

assign grp_fu_1217_p0 = ($signed(sext_ln454_2_fu_1202_p1) + $signed(11'd1));

assign grp_fu_1217_p1 = 11'd480;

assign grp_legalizeEdge_fu_908_ap_start = grp_legalizeEdge_fu_908_ap_start_reg;

assign he_face_V_address1 = grp_compactTriangleIndices_fu_968_he_face_V_address1;

assign icmp_ln451_1_fu_1143_p2 = (($signed(ap_phi_mux_empty_phi_fu_828_p4) < $signed(32'd480)) ? 1'b1 : 1'b0);

assign icmp_ln451_2_fu_1196_p2 = (($signed(ap_phi_mux_empty_72_phi_fu_838_p4) < $signed(32'd480)) ? 1'b1 : 1'b0);

assign icmp_ln451_fu_1101_p2 = (($signed(freeEdgeCount_i) < $signed(32'd480)) ? 1'b1 : 1'b0);

assign icmp_ln860_fu_1394_p2 = (($signed(add_ln859_fu_1388_p2) > $signed(32'd199)) ? 1'b1 : 1'b0);

assign isFirstPoint_fu_1075_p2 = ((processed_actual_points == 32'd0) ? 1'b1 : 1'b0);

assign sext_ln454_1_fu_1107_p1 = grp_load_fu_994_p1;

assign sext_ln454_2_fu_1202_p1 = grp_load_fu_994_p1;

assign sext_ln454_fu_1149_p1 = grp_load_fu_994_p1;

assign trunc_ln455_1_fu_1186_p1 = grp_fu_1164_p2[9:0];

assign trunc_ln455_2_fu_1252_p1 = grp_fu_1217_p2[9:0];

assign trunc_ln455_fu_1133_p1 = grp_fu_1122_p2[9:0];

assign zext_ln452_1_fu_1170_p1 = ap_phi_mux_empty_phi_fu_828_p4;

assign zext_ln452_2_fu_1235_p1 = ap_phi_mux_empty_72_phi_fu_838_p4;

assign zext_ln452_fu_1128_p1 = freeEdgeCount_i;

assign zext_ln454_1_fu_1153_p1 = $unsigned(grp_load_fu_994_p1);

assign zext_ln454_2_fu_1206_p1 = $unsigned(grp_load_fu_994_p1);

assign zext_ln454_fu_1111_p1 = $unsigned(grp_load_fu_994_p1);

assign zext_ln541_36_fu_1052_p1 = face_edge_V_q0;

assign zext_ln541_37_fu_1060_p1 = he_next_V_q0;

assign zext_ln541_38_fu_1065_p1 = he_next_V_q0;

assign zext_ln541_39_fu_1268_p1 = tri_num_V_i;

assign zext_ln541_40_fu_1274_p1 = e1_V_reg_1565;

assign zext_ln541_41_fu_1282_p1 = e2_V_14_reg_1574;

assign zext_ln541_42_fu_1290_p1 = e3_V_reg_1583;

assign zext_ln541_43_fu_1304_p1 = tri_num_V_i;

assign zext_ln541_44_fu_1310_p1 = e4_V_reg_1591;

assign zext_ln541_45_fu_1318_p1 = e5_V_reg_1600;

assign zext_ln541_46_fu_1330_p1 = e6_V_reg_1609;

assign zext_ln541_47_fu_1344_p1 = tri_num_V_i;

assign zext_ln541_48_fu_1350_p1 = e7_V_reg_1617;

assign zext_ln541_49_fu_1358_p1 = e8_V_reg_1643;

assign zext_ln541_50_fu_1326_p1 = e9_V_reg_1669;

assign zext_ln541_51_fu_1366_p1 = e2_V_12_reg_1454;

assign zext_ln541_52_fu_1370_p1 = e2_V_reg_1513;

assign zext_ln541_53_fu_1374_p1 = e2_V_13_reg_1519;

assign zext_ln541_fu_1046_p1 = containingFace;

always @ (posedge ap_clk) begin
    zext_ln541_37_reg_1436[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln541_38_reg_1470[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln541_40_reg_1633[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln541_41_reg_1638[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln541_42_reg_1652[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln541_44_reg_1664[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln541_45_reg_1676[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln541_50_reg_1681[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln541_46_reg_1690[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln541_48_reg_1702[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
    zext_ln541_49_reg_1707[63:15] <= 49'b0000000000000000000000000000000000000000000000000;
end

endmodule //tri2d_insertSiteEnhanced
