// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module tri2d_tri2d_Pipeline_VITIS_LOOP_909_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_in_stream_TVALID,
        x_in_stream_TDATA,
        x_in_stream_TREADY,
        x_in_stream_TKEEP,
        x_in_stream_TSTRB,
        x_in_stream_TUSER,
        x_in_stream_TLAST,
        x_in_stream_TID,
        x_in_stream_TDEST,
        vertex_x_V_address0,
        vertex_x_V_ce0,
        vertex_x_V_we0,
        vertex_x_V_d0,
        vertex_y_V_address0,
        vertex_y_V_ce0,
        vertex_y_V_we0,
        vertex_y_V_d0,
        vertex_used_V_address0,
        vertex_used_V_ce0,
        vertex_used_V_we0,
        vertex_used_V_d0,
        grp_fu_1099_p_din0,
        grp_fu_1099_p_dout0,
        grp_fu_1099_p_ce,
        grp_fu_1102_p_din0,
        grp_fu_1102_p_dout0,
        grp_fu_1102_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   x_in_stream_TVALID;
input  [63:0] x_in_stream_TDATA;
output   x_in_stream_TREADY;
input  [7:0] x_in_stream_TKEEP;
input  [7:0] x_in_stream_TSTRB;
input  [15:0] x_in_stream_TUSER;
input  [0:0] x_in_stream_TLAST;
input  [4:0] x_in_stream_TID;
input  [5:0] x_in_stream_TDEST;
output  [12:0] vertex_x_V_address0;
output   vertex_x_V_ce0;
output   vertex_x_V_we0;
output  [23:0] vertex_x_V_d0;
output  [12:0] vertex_y_V_address0;
output   vertex_y_V_ce0;
output   vertex_y_V_we0;
output  [23:0] vertex_y_V_d0;
output  [12:0] vertex_used_V_address0;
output   vertex_used_V_ce0;
output   vertex_used_V_we0;
output  [0:0] vertex_used_V_d0;
output  [31:0] grp_fu_1099_p_din0;
input  [63:0] grp_fu_1099_p_dout0;
output   grp_fu_1099_p_ce;
output  [31:0] grp_fu_1102_p_din0;
input  [63:0] grp_fu_1102_p_dout0;
output   grp_fu_1102_p_ce;

reg ap_idle;
reg x_in_stream_TREADY;
reg vertex_x_V_ce0;
reg vertex_x_V_we0;
reg vertex_y_V_ce0;
reg vertex_y_V_we0;
reg vertex_used_V_ce0;
reg vertex_used_V_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] icmp_ln909_fu_176_p2;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    x_in_stream_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [63:0] tmp_data_V_reg_693;
reg   [63:0] tmp_data_V_reg_693_pp0_iter1_reg;
wire   [31:0] empty_60_fu_206_p1;
wire   [31:0] empty_61_fu_211_p1;
wire   [63:0] zext_ln922_fu_222_p1;
reg   [63:0] zext_ln922_reg_709;
reg   [63:0] zext_ln922_reg_709_pp0_iter1_reg;
reg   [0:0] p_Result_s_reg_715;
wire   [51:0] trunc_ln554_fu_262_p1;
reg   [51:0] trunc_ln554_reg_720;
wire   [0:0] icmp_ln560_fu_266_p2;
reg   [0:0] icmp_ln560_reg_725;
wire   [11:0] F2_fu_272_p2;
reg   [11:0] F2_reg_732;
reg   [0:0] p_Result_2_reg_740;
wire   [51:0] trunc_ln554_1_fu_308_p1;
reg   [51:0] trunc_ln554_1_reg_745;
wire   [0:0] icmp_ln560_1_fu_312_p2;
reg   [0:0] icmp_ln560_1_reg_750;
wire   [11:0] F2_1_fu_318_p2;
reg   [11:0] F2_1_reg_757;
reg   [12:0] i_1_fu_100;
wire   [12:0] add_ln909_fu_182_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_i;
wire   [31:0] trunc_ln668_fu_192_p1;
wire   [31:0] tmp_s_fu_196_p4;
wire   [12:0] add_ln922_fu_216_p2;
wire   [63:0] ireg_fu_232_p1;
wire   [10:0] exp_tmp_fu_248_p4;
wire   [62:0] trunc_ln544_fu_236_p1;
wire   [11:0] zext_ln455_fu_258_p1;
wire   [63:0] ireg_1_fu_278_p1;
wire   [10:0] exp_tmp_1_fu_294_p4;
wire   [62:0] trunc_ln544_1_fu_282_p1;
wire   [11:0] zext_ln455_1_fu_304_p1;
wire   [52:0] p_Result_1_fu_324_p3;
wire   [53:0] zext_ln558_fu_331_p1;
wire   [53:0] man_V_1_fu_335_p2;
wire   [0:0] icmp_ln570_fu_348_p2;
wire   [11:0] add_ln570_fu_353_p2;
wire   [11:0] sub_ln570_fu_358_p2;
wire  signed [11:0] sh_amt_fu_363_p3;
wire   [53:0] man_V_2_fu_341_p3;
wire  signed [31:0] sext_ln570_fu_371_p1;
wire   [53:0] zext_ln575_fu_390_p1;
wire   [53:0] ashr_ln575_fu_394_p2;
wire   [0:0] tmp_fu_404_p3;
wire   [0:0] icmp_ln574_fu_384_p2;
wire   [23:0] trunc_ln575_fu_400_p1;
wire   [23:0] select_ln577_fu_411_p3;
wire   [23:0] trunc_ln572_fu_380_p1;
wire   [23:0] sext_ln570cast_fu_433_p1;
wire   [0:0] icmp_ln592_fu_427_p2;
wire   [23:0] shl_ln593_fu_437_p2;
wire   [0:0] icmp_ln571_fu_375_p2;
wire   [0:0] xor_ln560_fu_451_p2;
wire   [0:0] and_ln571_fu_456_p2;
wire   [23:0] select_ln592_fu_443_p3;
wire   [0:0] or_ln571_fu_470_p2;
wire   [0:0] xor_ln571_fu_475_p2;
wire   [0:0] and_ln570_fu_481_p2;
wire   [23:0] select_ln574_fu_419_p3;
wire   [23:0] select_ln571_fu_462_p3;
wire   [23:0] select_ln570_fu_487_p3;
wire   [52:0] p_Result_3_fu_503_p3;
wire   [53:0] zext_ln558_1_fu_510_p1;
wire   [53:0] man_V_4_fu_514_p2;
wire   [0:0] icmp_ln570_1_fu_527_p2;
wire   [11:0] add_ln570_1_fu_532_p2;
wire   [11:0] sub_ln570_1_fu_537_p2;
wire  signed [11:0] sh_amt_1_fu_542_p3;
wire   [53:0] man_V_5_fu_520_p3;
wire  signed [31:0] sext_ln570_1_fu_550_p1;
wire   [53:0] zext_ln575_1_fu_569_p1;
wire   [53:0] ashr_ln575_1_fu_573_p2;
wire   [0:0] tmp_2_fu_583_p3;
wire   [0:0] icmp_ln574_1_fu_563_p2;
wire   [23:0] trunc_ln575_1_fu_579_p1;
wire   [23:0] select_ln577_1_fu_590_p3;
wire   [23:0] trunc_ln572_1_fu_559_p1;
wire   [23:0] sext_ln570_1cast_fu_612_p1;
wire   [0:0] icmp_ln592_1_fu_606_p2;
wire   [23:0] shl_ln593_1_fu_616_p2;
wire   [0:0] icmp_ln571_1_fu_554_p2;
wire   [0:0] xor_ln560_1_fu_630_p2;
wire   [0:0] and_ln571_1_fu_635_p2;
wire   [23:0] select_ln592_1_fu_622_p3;
wire   [0:0] or_ln571_1_fu_649_p2;
wire   [0:0] xor_ln571_1_fu_654_p2;
wire   [0:0] and_ln570_1_fu_660_p2;
wire   [23:0] select_ln574_1_fu_598_p3;
wire   [23:0] select_ln571_1_fu_641_p3;
wire   [23:0] select_ln570_2_fu_666_p3;
reg    grp_fu_162_ce;
reg    grp_fu_165_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

tri2d_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln909_fu_176_p2 == 1'd0) & (ap_start_int == 1'b1))) begin
            i_1_fu_100 <= add_ln909_fu_182_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_100 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        F2_1_reg_757 <= F2_1_fu_318_p2;
        F2_reg_732 <= F2_fu_272_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln560_1_reg_750 <= icmp_ln560_1_fu_312_p2;
        icmp_ln560_reg_725 <= icmp_ln560_fu_266_p2;
        p_Result_2_reg_740 <= ireg_1_fu_278_p1[32'd63];
        p_Result_s_reg_715 <= ireg_fu_232_p1[32'd63];
        tmp_data_V_reg_693_pp0_iter1_reg <= tmp_data_V_reg_693;
        trunc_ln554_1_reg_745 <= trunc_ln554_1_fu_308_p1;
        trunc_ln554_reg_720 <= trunc_ln554_fu_262_p1;
        zext_ln922_reg_709_pp0_iter1_reg[12 : 0] <= zext_ln922_reg_709[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln909_fu_176_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_data_V_reg_693 <= x_in_stream_TDATA;
        zext_ln922_reg_709[12 : 0] <= zext_ln922_fu_222_p1[12 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln909_fu_176_p2 == 1'd1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i = 13'd0;
    end else begin
        ap_sig_allocacmp_i = i_1_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_162_ce = 1'b1;
    end else begin
        grp_fu_162_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_165_ce = 1'b1;
    end else begin
        grp_fu_165_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vertex_used_V_ce0 = 1'b1;
    end else begin
        vertex_used_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln909_fu_176_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        vertex_used_V_we0 = 1'b1;
    end else begin
        vertex_used_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        vertex_x_V_ce0 = 1'b1;
    end else begin
        vertex_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        vertex_x_V_we0 = 1'b1;
    end else begin
        vertex_x_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        vertex_y_V_ce0 = 1'b1;
    end else begin
        vertex_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        vertex_y_V_we0 = 1'b1;
    end else begin
        vertex_y_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln909_fu_176_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_in_stream_TDATA_blk_n = x_in_stream_TVALID;
    end else begin
        x_in_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln909_fu_176_p2 == 1'd0) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        x_in_stream_TREADY = 1'b1;
    end else begin
        x_in_stream_TREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_318_p2 = (12'd1075 - zext_ln455_1_fu_304_p1);

assign F2_fu_272_p2 = (12'd1075 - zext_ln455_fu_258_p1);

assign add_ln570_1_fu_532_p2 = ($signed(F2_1_reg_757) + $signed(12'd4076));

assign add_ln570_fu_353_p2 = ($signed(F2_reg_732) + $signed(12'd4076));

assign add_ln909_fu_182_p2 = (ap_sig_allocacmp_i + 13'd1);

assign add_ln922_fu_216_p2 = (ap_sig_allocacmp_i + 13'd3);

assign and_ln570_1_fu_660_p2 = (xor_ln571_1_fu_654_p2 & icmp_ln570_1_fu_527_p2);

assign and_ln570_fu_481_p2 = (xor_ln571_fu_475_p2 & icmp_ln570_fu_348_p2);

assign and_ln571_1_fu_635_p2 = (xor_ln560_1_fu_630_p2 & icmp_ln571_1_fu_554_p2);

assign and_ln571_fu_456_p2 = (xor_ln560_fu_451_p2 & icmp_ln571_fu_375_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln909_fu_176_p2 == 1'd0) & (x_in_stream_TVALID == 1'b0) & (ap_start_int == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln909_fu_176_p2 == 1'd0) & (x_in_stream_TVALID == 1'b0) & (ap_start_int == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((icmp_ln909_fu_176_p2 == 1'd0) & (x_in_stream_TVALID == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln575_1_fu_573_p2 = $signed(man_V_5_fu_520_p3) >>> zext_ln575_1_fu_569_p1;

assign ashr_ln575_fu_394_p2 = $signed(man_V_2_fu_341_p3) >>> zext_ln575_fu_390_p1;

assign empty_60_fu_206_p1 = trunc_ln668_fu_192_p1;

assign empty_61_fu_211_p1 = tmp_s_fu_196_p4;

assign exp_tmp_1_fu_294_p4 = {{ireg_1_fu_278_p1[62:52]}};

assign exp_tmp_fu_248_p4 = {{ireg_fu_232_p1[62:52]}};

assign grp_fu_1099_p_ce = grp_fu_162_ce;

assign grp_fu_1099_p_din0 = empty_60_fu_206_p1;

assign grp_fu_1102_p_ce = grp_fu_165_ce;

assign grp_fu_1102_p_din0 = empty_61_fu_211_p1;

assign icmp_ln560_1_fu_312_p2 = ((trunc_ln544_1_fu_282_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln560_fu_266_p2 = ((trunc_ln544_fu_236_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln570_1_fu_527_p2 = (($signed(F2_1_reg_757) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln570_fu_348_p2 = (($signed(F2_reg_732) > $signed(12'd20)) ? 1'b1 : 1'b0);

assign icmp_ln571_1_fu_554_p2 = ((F2_1_reg_757 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_375_p2 = ((F2_reg_732 == 12'd20) ? 1'b1 : 1'b0);

assign icmp_ln574_1_fu_563_p2 = ((sh_amt_1_fu_542_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_384_p2 = ((sh_amt_fu_363_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln592_1_fu_606_p2 = ((sh_amt_1_fu_542_p3 < 12'd24) ? 1'b1 : 1'b0);

assign icmp_ln592_fu_427_p2 = ((sh_amt_fu_363_p3 < 12'd24) ? 1'b1 : 1'b0);

assign icmp_ln909_fu_176_p2 = ((ap_sig_allocacmp_i == 13'd5000) ? 1'b1 : 1'b0);

assign ireg_1_fu_278_p1 = grp_fu_1102_p_dout0;

assign ireg_fu_232_p1 = grp_fu_1099_p_dout0;

assign man_V_1_fu_335_p2 = (54'd0 - zext_ln558_fu_331_p1);

assign man_V_2_fu_341_p3 = ((p_Result_s_reg_715[0:0] == 1'b1) ? man_V_1_fu_335_p2 : zext_ln558_fu_331_p1);

assign man_V_4_fu_514_p2 = (54'd0 - zext_ln558_1_fu_510_p1);

assign man_V_5_fu_520_p3 = ((p_Result_2_reg_740[0:0] == 1'b1) ? man_V_4_fu_514_p2 : zext_ln558_1_fu_510_p1);

assign or_ln571_1_fu_649_p2 = (icmp_ln571_1_fu_554_p2 | icmp_ln560_1_reg_750);

assign or_ln571_fu_470_p2 = (icmp_ln571_fu_375_p2 | icmp_ln560_reg_725);

assign p_Result_1_fu_324_p3 = {{1'd1}, {trunc_ln554_reg_720}};

assign p_Result_3_fu_503_p3 = {{1'd1}, {trunc_ln554_1_reg_745}};

assign select_ln570_2_fu_666_p3 = ((and_ln570_1_fu_660_p2[0:0] == 1'b1) ? select_ln574_1_fu_598_p3 : select_ln571_1_fu_641_p3);

assign select_ln570_fu_487_p3 = ((and_ln570_fu_481_p2[0:0] == 1'b1) ? select_ln574_fu_419_p3 : select_ln571_fu_462_p3);

assign select_ln571_1_fu_641_p3 = ((and_ln571_1_fu_635_p2[0:0] == 1'b1) ? trunc_ln572_1_fu_559_p1 : select_ln592_1_fu_622_p3);

assign select_ln571_fu_462_p3 = ((and_ln571_fu_456_p2[0:0] == 1'b1) ? trunc_ln572_fu_380_p1 : select_ln592_fu_443_p3);

assign select_ln574_1_fu_598_p3 = ((icmp_ln574_1_fu_563_p2[0:0] == 1'b1) ? trunc_ln575_1_fu_579_p1 : select_ln577_1_fu_590_p3);

assign select_ln574_fu_419_p3 = ((icmp_ln574_fu_384_p2[0:0] == 1'b1) ? trunc_ln575_fu_400_p1 : select_ln577_fu_411_p3);

assign select_ln577_1_fu_590_p3 = ((tmp_2_fu_583_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln577_fu_411_p3 = ((tmp_fu_404_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln592_1_fu_622_p3 = ((icmp_ln592_1_fu_606_p2[0:0] == 1'b1) ? shl_ln593_1_fu_616_p2 : 24'd0);

assign select_ln592_fu_443_p3 = ((icmp_ln592_fu_427_p2[0:0] == 1'b1) ? shl_ln593_fu_437_p2 : 24'd0);

assign sext_ln570_1_fu_550_p1 = sh_amt_1_fu_542_p3;

assign sext_ln570_1cast_fu_612_p1 = sext_ln570_1_fu_550_p1[23:0];

assign sext_ln570_fu_371_p1 = sh_amt_fu_363_p3;

assign sext_ln570cast_fu_433_p1 = sext_ln570_fu_371_p1[23:0];

assign sh_amt_1_fu_542_p3 = ((icmp_ln570_1_fu_527_p2[0:0] == 1'b1) ? add_ln570_1_fu_532_p2 : sub_ln570_1_fu_537_p2);

assign sh_amt_fu_363_p3 = ((icmp_ln570_fu_348_p2[0:0] == 1'b1) ? add_ln570_fu_353_p2 : sub_ln570_fu_358_p2);

assign shl_ln593_1_fu_616_p2 = trunc_ln572_1_fu_559_p1 << sext_ln570_1cast_fu_612_p1;

assign shl_ln593_fu_437_p2 = trunc_ln572_fu_380_p1 << sext_ln570cast_fu_433_p1;

assign sub_ln570_1_fu_537_p2 = (12'd20 - F2_1_reg_757);

assign sub_ln570_fu_358_p2 = (12'd20 - F2_reg_732);

assign tmp_2_fu_583_p3 = tmp_data_V_reg_693_pp0_iter1_reg[32'd63];

assign tmp_fu_404_p3 = tmp_data_V_reg_693_pp0_iter1_reg[32'd31];

assign tmp_s_fu_196_p4 = {{x_in_stream_TDATA[63:32]}};

assign trunc_ln544_1_fu_282_p1 = ireg_1_fu_278_p1[62:0];

assign trunc_ln544_fu_236_p1 = ireg_fu_232_p1[62:0];

assign trunc_ln554_1_fu_308_p1 = ireg_1_fu_278_p1[51:0];

assign trunc_ln554_fu_262_p1 = ireg_fu_232_p1[51:0];

assign trunc_ln572_1_fu_559_p1 = man_V_5_fu_520_p3[23:0];

assign trunc_ln572_fu_380_p1 = man_V_2_fu_341_p3[23:0];

assign trunc_ln575_1_fu_579_p1 = ashr_ln575_1_fu_573_p2[23:0];

assign trunc_ln575_fu_400_p1 = ashr_ln575_fu_394_p2[23:0];

assign trunc_ln668_fu_192_p1 = x_in_stream_TDATA[31:0];

assign vertex_used_V_address0 = zext_ln922_fu_222_p1;

assign vertex_used_V_d0 = 1'd1;

assign vertex_x_V_address0 = zext_ln922_reg_709_pp0_iter1_reg;

assign vertex_x_V_d0 = ((icmp_ln560_reg_725[0:0] == 1'b1) ? 24'd0 : select_ln570_fu_487_p3);

assign vertex_y_V_address0 = zext_ln922_reg_709_pp0_iter1_reg;

assign vertex_y_V_d0 = ((icmp_ln560_1_reg_750[0:0] == 1'b1) ? 24'd0 : select_ln570_2_fu_666_p3);

assign xor_ln560_1_fu_630_p2 = (icmp_ln560_1_reg_750 ^ 1'd1);

assign xor_ln560_fu_451_p2 = (icmp_ln560_reg_725 ^ 1'd1);

assign xor_ln571_1_fu_654_p2 = (or_ln571_1_fu_649_p2 ^ 1'd1);

assign xor_ln571_fu_475_p2 = (or_ln571_fu_470_p2 ^ 1'd1);

assign zext_ln455_1_fu_304_p1 = exp_tmp_1_fu_294_p4;

assign zext_ln455_fu_258_p1 = exp_tmp_fu_248_p4;

assign zext_ln558_1_fu_510_p1 = p_Result_3_fu_503_p3;

assign zext_ln558_fu_331_p1 = p_Result_1_fu_324_p3;

assign zext_ln575_1_fu_569_p1 = $unsigned(sext_ln570_1_fu_550_p1);

assign zext_ln575_fu_390_p1 = $unsigned(sext_ln570_fu_371_p1);

assign zext_ln922_fu_222_p1 = add_ln922_fu_216_p2;

always @ (posedge ap_clk) begin
    zext_ln922_reg_709[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln922_reg_709_pp0_iter1_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //tri2d_tri2d_Pipeline_VITIS_LOOP_909_2
